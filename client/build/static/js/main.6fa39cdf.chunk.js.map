{"version":3,"sources":["i18n.js","helpers/setAuthToken.js","helpers/functions.js","redux/actions/auth.js","redux/actions/types.js","redux/actions/search.js","redux/actions/location.js","redux/actions/pagination.js","redux/actions/toggle.js","redux/actions/proverb.js","redux/selectors/authSelectors.js","redux/selectors/proverbSelectors.js","redux/selectors/searchSelectors.js","redux/selectors/paginationSelectors.js","redux/selectors/toggleSelectors.js","redux/hooks.js","components/Input.js","components/Icon.js","components/Button.js","components/Section.js","components/Breadcrumb.js","helpers/formData.js","components/sign up and log in/SocialLogin.js","pages/auth/Login.js","components/Checkbox.js","pages/auth/Register.js","components/NavbarLink.js","components/NavbarDropdown.js","components/ChangeLang.js","components/Navbar.js","pages/layout/Navbar.js","components/FlexTableHeader.js","components/FlexTableCell.js","components/FlexTableIconCell.js","components/SocialMediaShare.js","components/FlexTable.js","components/Pagination.js","components/Spinner.js","helpers/flexTableData.js","pages/proverb/ProverbList.js","pages/proverb/Proverb.js","pages/proverb/AddProverb.js","components/Modal.js","components/ProgressBar.js","components/Badge.js","pages/home/Search.js","pages/home/HomePage.js","pages/proverb/UpdateProverb.js","pages/user/Dashboard.js","components/ToggleSwitch.js","pages/admin/AdminDashboard.js","pages/routing/PrivateRoute.js","pages/about/About.js","redux/reducers/auth.js","redux/reducers/proverb.js","redux/reducers/search.js","redux/reducers/pagination.js","redux/reducers/toggle.js","redux/reducers/index.js","redux/store.js","App.js","index.js","images/idiomia-11.png"],"names":["resources","en","ar","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","setAuthToken","token","axios","defaults","headers","common","validateForm","errors","Object","values","some","value","Boolean","showError","err","response","data","msg","forEach","error","toast","API_URL","process","loadUser","dispatch","a","localStorage","type","get","res","payload","current_user","removeItem","register","post","setItem","success","t","login","logout","setSearchTerm","term","setSearchField","field","setSearchIconClicked","bool","setLocationChanged","setPage","page","setPageItems","items","setPageSize","size","setPageReset","setToggle","label","getApprovedProverbs","limit","proverbs","statusText","status","getUserProverbs","user_proverbs","getProverb","id","addUserProverb","formData","getState","pagination","activePage","pageSize","proverb","className","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","addProverb","deleteProverb","delete","deleted_proverbId","updateProverb","patch","edited_proverb","searchApprovedProverbs","paginatedProverbs","getAllUserProverbs","isApproved","allUserProverbsUrl","getProverbAdmin","approveUserProverb","toggleValue","toggle","search","isSearchActive","isActive","searchTerm","approve","approved_proverb","searchUserProverbs","updateUserProverb","deleteUserProverb","deleted_proverb","searchProverbsUrl","selectAuth","state","auth","selectProverb","selectSearch","selectPagination","selectToggle","useAuth","useDispatch","useSelector","shallowEqual","isAuthenticated","loading","user","useCallback","registerUser","loginUser","logoutUser","useProverb","approvedProverbs","userProverbs","allProverbs","totalPages","totalFound","useSearch","isButtonClicked","boundSetSearchTerm","boundSetSearchIconClicked","useLocation","usePagination","pageItems","pageReset","boundSetPageSize","boundSetPageItems","Input","plaintext","disabled","required","pClassName","labelClassName","controlId","children","inputTextLeft","inputTextRight","inputTextRightOnClick","inputRef","props","Form","Group","Label","InputGroup","Prepend","Text","Control","ref","onClick","Icon","icon","title","icons","style","cursor","marginRight","pointerEvents","Button","text","Section","containerClass","Breadcrumb","Item","linkAs","Link","linkProps","to","active","REGISTER_INITIAL_DATA","name","email","password","confirmPassword","country","phone","newsletters","LOGIN_INITIAL_DATA","PROVERB_INITIAL_DATA","translation","explanation","SocialLogin","useTranslation","appId","callback","handleFacebookSignUp","fields","render","renderProps","variant","clientId","onSuccess","handleGoogleSignUp","onFailure","cookiePolicy","Login","useState","setFormData","onChange","e","target","onSubmit","preventDefault","role","Container","fixedWidth","loginMsg","profileObj","googleId","facebookBtnTxt","googleBtnTxt","placeholder","autoComplete","minLength","color","signUp","Checkbox","Check","Register","setDisabled","useEffect","isFilled","every","checked","length","test","String","toLowerCase","validateEmail","countries","code","concat","countryList","getData","as","map","key","NavbarLink","Nav","NavbarDropdown","dropdownLinks","NavDropdown","link","i","isAuth","ChangeLang","lang","changeLanguage","handleLang","NavbarComponent","brandLogo","links","bg","expand","Brand","src","alt","Toggle","aria-controls","Collapse","Navbar","history","useHistory","isAdminRole","push","IdiomiaLogo","FlexTableHeader","titleData","item","k","fieldName","FlexTableCell","FlexTableIconCell","iconClick","_id","SocialMediaShare","shareUrl","quote","FacebookShareButton","url","FacebookIcon","round","FacebookMessengerShareButton","FacebookMessengerIcon","TwitterShareButton","TwitterIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","subject","body","EmailIcon","TelegramShareButton","TelegramIcon","TumblrShareButton","TumblrIcon","WhatsappShareButton","WhatsappIcon","FlexTable","tableId","tableType","rowFooter","adminApproval","Pagination","paginationClass","setActivePage","setActivePageItems","shouldResetPagination","setShouldResetPagination","pages","setPages","newPages","createPages","startPage","endPage","Array","keys","buildPagesArray","handleNavigatePage","isPageReset","activePageNumber","First","Prev","Next","Last","Spinner","animation","homepageTableTitle","userDashboardTitle","adminDashboardTitle","ProverbList","showSocialMediaBtns","setShowSocialMediaBtns","searchTimeOut","useRef","searchField","current","setTimeout","clearTimeout","top","left","Proverb","actionType","handleCloseModal","proverbObj","proverbFormValues","handleInputChange","result","proverbAddAction","i18next","readOnly","AddProverb","Modal","isOpen","modalClose","dialogClassName","centered","show","onHide","Header","closeButton","ProgressBar","srOnly","completed","setCompleted","now","Badge","Search","searchInput","handleSearchFieldChange","focus","HomePage","proverbLoading","modal","setModal","UpdateProverb","Dashboard","userLoading","listen","handleShowModal","selectModalChildren","textContent","ToggleSwitch","defaultOption","firstOption","secondOption","switchRef","addClass","AdminDashboard","useToggle","handleDeleteProverb","approveText","PrivateRoute","Component","component","rest","About","initialState","getItem","combineReducers","action","results","total_pages","total","find","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","toastClassName","bodyClassName","progressClassName","newestOnTop","rtl","pauseOnFocusLoss","exact","path","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6fa39cdf.chunk.js","sourcesContent":["import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nimport ar from '../src/locales/ar/translation.json'\nimport en from '../src/locales/en/translation.json'\nconst resources = { en, ar }\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en',\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  })\n\nexport default i18n\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    axios.defaults.headers.common[\"Authorization\"] = null;\n  }\n};\n\nexport default setAuthToken;\n","import { toast } from \"react-toastify\";\n\nexport const isArabic = (text) => {\n  const pattern = /[\\u0600-\\u06FF]/;\n  return pattern.test(text);\n};\n\nexport const validateEmail = (email) => {\n  // eslint-disable-next-line no-useless-escape\n  const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return pattern.test(String(email).toLowerCase());\n};\n\nexport const validateForm = (errors) =>\n  Object.values(errors).some((value) => Boolean(value));\n\nexport const showError = (err) => {\n  const { errors, msg } = err.response.data;\n\n  if (errors) {\n    errors.forEach((error) => toast.error(error.msg));\n    return;\n  }\n  if (msg) {\n    toast.error(msg);\n    return;\n  }\n};\n","import axios from 'axios'\nimport i18n from '../../i18n';\n\nimport {\n  REGISTER_USER,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_ERROR,\n  GET_USER_INFO,\n  GET_USER_INFO_SUCCESS,\n  GET_USER_INFO_ERROR,\n  LOGIN_USER,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_ERROR,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types'\nimport setAuthToken from './../../helpers/setAuthToken'\nimport { toast } from 'react-toastify'\nimport { showError } from './../../helpers/functions'\n\nconst API_URL = process.env.REACT_APP_IDIOMIA_API\n\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token)\n  }\n\n  try {\n    dispatch({\n      type: GET_USER_INFO\n    })\n    const res = await axios.get(`${API_URL}/users/get-user`)\n\n    dispatch({\n      type: GET_USER_INFO_SUCCESS,\n      payload: res.data.current_user\n    })\n  } catch (err) {\n    dispatch({\n      type: GET_USER_INFO_ERROR\n    })\n    localStorage.removeItem('token')\n  }\n}\n\n// Register User\nexport const register = data => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER\n    })\n    const res = await axios.post(`${API_URL}/users/signup`, data)\n    localStorage.setItem('token', res.data.token)\n\n    await dispatch(loadUser())\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: res.data\n    })\n    toast.success(i18n.t('auth: You have registered successfully'))\n  } catch (err) {\n    showError(err)\n\n    dispatch({\n      type: REGISTER_USER_ERROR\n    })\n    localStorage.removeItem('token')\n  }\n}\n\n// Login User\nexport const login = data => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_USER\n    })\n    const res = await axios.post(`${API_URL}/users/login`, data)\n    localStorage.setItem('token', res.data.token)\n    await dispatch(loadUser())\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: res.data\n    })\n    toast.success(i18n.t('auth:You have registered successfully'))\n  } catch (err) {\n    showError(err)\n\n    dispatch({\n      type: LOGIN_USER_ERROR\n    })\n    localStorage.removeItem('token')\n  }\n}\n\n// Logout / Clear Profile\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE })\n  dispatch({ type: LOGOUT })\n  localStorage.removeItem('token')\n}\n","export const REGISTER_USER = \"REGISTER_USER\";\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\nexport const REGISTER_USER_ERROR = \"REGISTER_USER_ERROR\";\n\nexport const LOGIN_USER = \"LOGIN_USER\";\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const LOGIN_USER_ERROR = \"LOGIN_USER_ERROR\";\n\nexport const GET_USER_INFO = \"GET_USER_INFO\";\nexport const GET_USER_INFO_SUCCESS = \"GET_USER_INFO_SUCCESS\";\nexport const GET_USER_INFO_ERROR = \"GET_USER_INFO_ERROR\";\n\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\n\nexport const CLEAR_PROVERBS = \"CLEAR_PROVERBS\";\n\nexport const GET_APPROVED_PROVERBS = \"GET_APPROVED_PROVERBS\";\nexport const GET_APPROVED_PROVERBS_SUCCESS = \"GET_APPROVED_PROVERBS_SUCCESS\";\nexport const GET_APPROVED_PROVERBS_ERROR = \"GET_APPROVED_PROVERBS_ERROR\";\n\nexport const GET_USER_PROVERBS = \"GET_USER_PROVERBS\";\nexport const GET_USER_PROVERBS_SUCCESS = \"GET_USER_PROVERBS_SUCCESS\";\nexport const GET_USER_PROVERBS_ERROR = \"GET_USER_PROVERBS_ERROR\";\n\nexport const GET_PROVERB_SUCCESS = \"GET_PROVERB_SUCCESS\";\n\nexport const ADD_PROVERB = \"ADD_PROVERB\";\nexport const ADD_PROVERB_SUCCESS = \"ADD_PROVERB_SUCCESS\";\nexport const ADD_PROVERB_ERROR = \"ADD_PROVERB_ERROR\";\n\nexport const ADD_USER_PROVERB = \"ADD_USER_PROVERB\";\nexport const ADD_USER_PROVERB_SUCCESS = \"ADD_USER_PROVERB_SUCCESS\";\nexport const ADD_USER_PROVERB_ERROR = \"ADD_USER_PROVERB_ERROR\";\n\nexport const UPDATE_PROVERB = \"UPDATE_PROVERB\";\nexport const UPDATE_PROVERB_SUCCESS = \"UPDATE_PROVERB_SUCCESS\";\nexport const UPDATE_PROVERB_ERROR = \"UPDATE_PROVERB_ERROR\";\n\nexport const DELETE_PROVERB = \"DELETE_PROVERB\";\nexport const DELETE_PROVERB_SUCCESS = \"DELETE_PROVERB_SUCCESS\";\nexport const DELETE_PROVERB_ERROR = \"DELETE_PROVERB_ERROR\";\n\nexport const SEARCH_APPROVED_PROVERBS = \"SEARCH_APPROVED_PROVERBS\";\nexport const SEARCH_APPROVED_PROVERBS_SUCCESS =\n  \"SEARCH_APPROVED_PROVERBS_SUCCESS\";\nexport const SEARCH_APPROVED_PROVERBS_ERROR = \"SEARCH_APPROVED_PROVERBS_ERROR\";\nexport const SET_SEARCH_TERM = \"SET_SEARCH_TERM\";\nexport const SET_SEARCH_FIELD = \"SET_SEARCH_FIELD\";\n\nexport const LOCATION_CHANGED = \"LOCATION_CHANGED\";\n\nexport const SET_PAGINATION_PAGE = \"SET_PAGINATION_PAGE\";\nexport const SET_PAGINATION_ITEMS = \"SET_PAGINATION_ITEMS\";\nexport const SET_PAGINATION_SIZE = \"SET_PAGINATION_SIZE\";\nexport const SET_PAGINATION_RESET = \"SET_PAGINATION_RESET\";\n//admin\nexport const GET_PROVERB_ADMIN_SUCCESS = \"GET_PROVERB_ADMIN_SUCCESS\";\n\nexport const GET_ALL_USER_PROVERBS = \"GET_ALL_USER_PROVERBS\";\nexport const GET_ALL_USER_PROVERBS_SUCCESS = \"GET_ALL_USER_PROVERBS_SUCCESS\";\nexport const GET_ALL_USER_PROVERBS_ERROR = \"GET_ALL_USER_PROVERBS_ERROR\";\n\nexport const APPROVE_USER_PROVERB = \"APPROVE_USER_PROVERB\";\nexport const APPROVE_USER_PROVERB_SUCCESS = \"APPROVE_USER_PROVERB_SUCCESS\";\nexport const APPROVE_USER_PROVERB_ERROR = \"APPROVE_USER_PROVERB_ERROR\";\n\nexport const DELETE_USER_PROVERB = \"DELETE_USER_PROVERB\";\nexport const DELETE_USER_PROVERB_SUCCESS = \"DELETE_USER_PROVERB_SUCCESS\";\nexport const DELETE_USER_PROVERB_ERROR = \"DELETE_USER_PROVERB_ERROR\";\n\nexport const UPDATE_USER_PROVERB = \"UPDATE_USER_PROVERB\";\nexport const UPDATE_USER_PROVERB_SUCCESS = \"UPDATE_USER_PROVERB_SUCCESS\";\nexport const UPDATE_USER_PROVERB_ERROR = \"UPDATE_USER_PROVERB_ERROR\";\n\nexport const SEARCH_USER_PROVERBS = \"SEARCH_USER_PROVERBS\";\nexport const SEARCH_USER_PROVERBS_SUCCESS = \"SEARCH_USER_PROVERBS_SUCCESS\";\nexport const SEARCH_USER_PROVERBS_ERROR = \"SEARCH_USER_PROVERBS_ERROR\";\nexport const SET_SEARCH_ICON_CLICKED = \"SET_SEARCH_ICON_CLICKED\";\n//toggle\nexport const SET_TOGGLE = \"SET_TOGGLE\";\n","import { SET_SEARCH_FIELD, SET_SEARCH_TERM, SET_SEARCH_ICON_CLICKED } from \"./types\";\n\nexport const setSearchTerm = (term) => async (dispatch) => {\n  dispatch({\n    type: SET_SEARCH_TERM,\n    payload: term,\n  });\n};\n\nexport const setSearchField = (field) => async (dispatch) => {\n  dispatch({\n    type: SET_SEARCH_FIELD,\n    payload: field,\n  });\n};\n\nexport const setSearchIconClicked = (bool) => async (dispatch) => {\n  dispatch({\n    type: SET_SEARCH_ICON_CLICKED,\n    payload: bool,\n  });\n};\n","import { LOCATION_CHANGED } from \"./types\";\n\nexport const setLocationChanged = () => async (dispatch) => {\n  dispatch({\n    type: LOCATION_CHANGED,\n  });\n};\n","import {\n  SET_PAGINATION_PAGE,\n  SET_PAGINATION_SIZE,\n  SET_PAGINATION_RESET,\n  SET_PAGINATION_ITEMS,\n} from \"./types\";\n\nexport const setPage = (page) => async (dispatch) => {\n  dispatch({\n    type: SET_PAGINATION_PAGE,\n    payload: page,\n  });\n};\n\nexport const setPageItems = (items) => async (dispatch) => {\n  dispatch({\n    type: SET_PAGINATION_ITEMS,\n    payload: items,\n  });\n};\n\nexport const setPageSize = (size) => async (dispatch) => {\n  dispatch({\n    type: SET_PAGINATION_SIZE,\n    payload: size,\n  });\n};\n\nexport const setPageReset = (bool) => async (dispatch) => {\n  dispatch({\n    type: SET_PAGINATION_RESET,\n    payload: bool,\n  });\n};\n","import { SET_TOGGLE } from \"./types\";\n\nexport const setToggle = ({ value, label }) => async (dispatch) => {\n  dispatch({\n    type: SET_TOGGLE,\n    payload: { value, label },\n  });\n};\n","import axios from \"axios\";\nimport i18n from \"../../i18n\";\n\nimport {\n  GET_APPROVED_PROVERBS,\n  GET_APPROVED_PROVERBS_SUCCESS,\n  GET_APPROVED_PROVERBS_ERROR,\n  GET_USER_PROVERBS,\n  GET_USER_PROVERBS_SUCCESS,\n  GET_USER_PROVERBS_ERROR,\n  GET_PROVERB_SUCCESS,\n  GET_PROVERB_ADMIN_SUCCESS,\n  ADD_PROVERB,\n  ADD_PROVERB_SUCCESS,\n  ADD_PROVERB_ERROR,\n  ADD_USER_PROVERB,\n  ADD_USER_PROVERB_SUCCESS,\n  ADD_USER_PROVERB_ERROR,\n  DELETE_PROVERB,\n  DELETE_PROVERB_SUCCESS,\n  DELETE_PROVERB_ERROR,\n  UPDATE_PROVERB,\n  UPDATE_PROVERB_SUCCESS,\n  UPDATE_PROVERB_ERROR,\n  GET_ALL_USER_PROVERBS,\n  GET_ALL_USER_PROVERBS_SUCCESS,\n  GET_ALL_USER_PROVERBS_ERROR,\n  APPROVE_USER_PROVERB,\n  APPROVE_USER_PROVERB_SUCCESS,\n  APPROVE_USER_PROVERB_ERROR,\n  DELETE_USER_PROVERB,\n  DELETE_USER_PROVERB_SUCCESS,\n  DELETE_USER_PROVERB_ERROR,\n  UPDATE_USER_PROVERB,\n  UPDATE_USER_PROVERB_SUCCESS,\n  UPDATE_USER_PROVERB_ERROR,\n  SEARCH_APPROVED_PROVERBS,\n  SEARCH_APPROVED_PROVERBS_SUCCESS,\n  SEARCH_APPROVED_PROVERBS_ERROR,\n  SEARCH_USER_PROVERBS,\n  SEARCH_USER_PROVERBS_SUCCESS,\n  SEARCH_USER_PROVERBS_ERROR,\n} from \"./types\";\nimport { toast } from \"react-toastify\";\nimport { showError } from \"./../../helpers/functions\";\n\nconst API_URL = process.env.REACT_APP_IDIOMIA_API;\n\n// Get All Proverbs for common user\nexport const getApprovedProverbs = (page, limit) => async (dispatch) => {\n  try {\n    dispatch({\n      type: GET_APPROVED_PROVERBS,\n    });\n    const res = await axios.get(\n      `${API_URL}/proverbs/all-proverbs?limit=${limit}&sort=desc&approved=true&page=${page}`\n    );\n    dispatch({\n      type: GET_APPROVED_PROVERBS_SUCCESS,\n      payload: res.data.proverbs,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_APPROVED_PROVERBS_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get All Proverbs for registered user\nexport const getUserProverbs = (page, limit) => async (dispatch) => {\n  try {\n    dispatch({\n      type: GET_USER_PROVERBS,\n    });\n    const res = await axios.get(\n      `${API_URL}/proverbs/my-proverbs?page=${page}&limit=${limit}&sort=asc`\n    );\n    dispatch({\n      type: GET_USER_PROVERBS_SUCCESS,\n      payload: res.data.user_proverbs,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_USER_PROVERBS_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get Proverb for user\nexport const getProverb = (id) => (dispatch) => {\n  dispatch({\n    type: GET_PROVERB_SUCCESS,\n    payload: id,\n  });\n};\n\n// Add proverb for registered user\nexport const addUserProverb = (formData) => async (dispatch, getState) => {\n  const { activePage, pageSize } = getState().pagination;\n  try {\n    dispatch({\n      type: ADD_USER_PROVERB,\n    });\n    const res = await axios.post(\n      `${API_URL}/proverbs/post-my-proverb`,\n      formData\n    );\n\n    dispatch({\n      type: ADD_USER_PROVERB_SUCCESS,\n      payload: res.data.proverb,\n    });\n    dispatch(getUserProverbs(activePage, pageSize));\n\n    toast(i18n.t(\"proverbs:proverb Success\"), {\n      className: \"toast-user-proverb\",\n      position: \"top-left\",\n      autoClose: false,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  } catch (err) {\n    showError(err);\n\n    dispatch({\n      type: ADD_USER_PROVERB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add proverb for common user\nexport const addProverb = (formData) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ADD_PROVERB,\n    });\n    const res = await axios.post(`${API_URL}/proverbs/post-proverb`, formData);\n\n    dispatch({\n      type: ADD_PROVERB_SUCCESS,\n      payload: res.data.proverb,\n    });\n\n    toast(i18n.t(\"proverbs:proverb Success\"), {\n      className: \"toast-user-proverb\",\n      position: \"top-left\",\n      autoClose: false,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  } catch (err) {\n    showError(err);\n\n    dispatch({\n      type: ADD_PROVERB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete proverb for registered user\nexport const deleteProverb = (id) => async (dispatch, getState) => {\n  const { activePage, pageSize } = getState().pagination;\n\n  try {\n    dispatch({\n      type: DELETE_PROVERB,\n    });\n    const res = await axios.delete(\n      `${API_URL}/proverbs/delete-my-proverb/${id}`\n    );\n\n    await dispatch({\n      type: DELETE_PROVERB_SUCCESS,\n      payload: res.data.deleted_proverbId,\n    });\n    await dispatch(getUserProverbs(activePage, pageSize));\n\n    toast.success(i18n.t(\"proverbs:Proverb deleted successfully\"));\n  } catch (err) {\n    dispatch({\n      type: DELETE_PROVERB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Update Proverb for registered user\nexport const updateProverb = (formData, id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: UPDATE_PROVERB,\n    });\n    const res = await axios.patch(\n      `${API_URL}/proverbs/edit-my-proverb/${id}`,\n      formData\n    );\n\n    dispatch({\n      type: UPDATE_PROVERB_SUCCESS,\n      payload: res.data.edited_proverb,\n    });\n\n    toast.success(i18n.t(\"proverbs:Proverb updated successfully\"));\n  } catch (err) {\n    showError(err);\n\n    dispatch({\n      type: UPDATE_PROVERB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Search user proverbs for common user on homepage\nexport const searchApprovedProverbs = (page, limit, term, field) => async (\n  dispatch\n) => {\n  try {\n    dispatch({\n      type: SEARCH_APPROVED_PROVERBS,\n    });\n    const res = await axios.get(\n      `${API_URL}/proverbs/proverb-search?search_field=${field}&search_value=${term}&page=${page}&limit=${limit}&approved=true`\n    );\n\n    dispatch({\n      type: SEARCH_APPROVED_PROVERBS_SUCCESS,\n      payload: res.data.paginatedProverbs,\n    });\n  } catch (err) {\n    dispatch({\n      type: SEARCH_APPROVED_PROVERBS_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//admin actions\n\n// Get All User Proverbs @admin role\nexport const getAllUserProverbs = (page, limit, isApproved = \"all\") => async (\n  dispatch\n) => {\n  let allUserProverbsUrl = `${API_URL}/admin/all-proverbs?page=${page}&limit=${limit}&sort=desc`;\n\n  if (isApproved !== \"all\") {\n    allUserProverbsUrl = allUserProverbsUrl + `&approved=${isApproved}`;\n  }\n\n  try {\n    dispatch({\n      type: GET_ALL_USER_PROVERBS,\n    });\n    const res = await axios.get(allUserProverbsUrl);\n    dispatch({\n      type: GET_ALL_USER_PROVERBS_SUCCESS,\n      payload: res.data.proverbs,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ALL_USER_PROVERBS_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get Proverb for admin\nexport const getProverbAdmin = (id) => (dispatch) => {\n  dispatch({\n    type: GET_PROVERB_ADMIN_SUCCESS,\n    payload: id,\n  });\n};\n\n// Approve user proverb for admin\nexport const approveUserProverb = (data, id) => async (dispatch, getState) => {\n  const { activePage, pageSize } = getState().pagination;\n  const { value: toggleValue } = getState().toggle;\n  const { isActive: isSearchActive, searchTerm, field } = getState().search;\n\n  let isApproved = \"all\";\n  if (toggleValue === 1) {\n    isApproved = false;\n  }\n  if (toggleValue === 2) {\n    isApproved = true;\n  }\n\n  try {\n    dispatch({\n      type: APPROVE_USER_PROVERB,\n    });\n    const res = await axios.patch(`${API_URL}/admin/approve-proverb/${id}`, {\n      approve: data,\n    });\n\n    dispatch({\n      type: APPROVE_USER_PROVERB_SUCCESS,\n      payload: res.data.approved_proverb,\n    });\n    if (isSearchActive) {\n      await dispatch(\n        searchUserProverbs(activePage, pageSize, searchTerm, field)\n      );\n    } else {\n      await dispatch(getAllUserProverbs(activePage, pageSize, isApproved));\n    }\n\n    toast.success(`Proverb ${data ? \"approved\" : \"disapproved\"} successfully`);\n  } catch (err) {\n    dispatch({\n      type: APPROVE_USER_PROVERB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Update User Proverb for admin\nexport const updateUserProverb = (formData, id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: UPDATE_USER_PROVERB,\n    });\n    const res = await axios.patch(\n      `${API_URL}/admin/edit-proverb/${id}`,\n      formData\n    );\n\n    dispatch({\n      type: UPDATE_USER_PROVERB_SUCCESS,\n      payload: res.data.edited_proverb,\n    });\n\n    toast.success(i18n.t(\"proverbs:Proverb updated successfully\"));\n  } catch (err) {\n    showError(err);\n\n    dispatch({\n      type: UPDATE_USER_PROVERB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete user proverb for admin\nexport const deleteUserProverb = (id) => async (dispatch, getState) => {\n  const { activePage, pageSize } = getState().pagination;\n  const { value: toggleValue } = getState().toggle;\n  const { isActive: isSearchActive, searchTerm, field } = getState().search;\n\n  let isApproved = \"all\";\n  if (toggleValue === 1) {\n    isApproved = false;\n  }\n  if (toggleValue === 2) {\n    isApproved = true;\n  }\n\n  try {\n    dispatch({\n      type: DELETE_USER_PROVERB,\n    });\n    const res = await axios.delete(`${API_URL}/admin/delete-proverb/${id}`);\n\n    dispatch({\n      type: DELETE_USER_PROVERB_SUCCESS,\n      payload: res.data.deleted_proverb,\n    });\n\n    if (isSearchActive) {\n      await dispatch(\n        searchUserProverbs(activePage, pageSize, searchTerm, field)\n      );\n    } else {\n      await dispatch(getAllUserProverbs(activePage, pageSize, isApproved));\n    }\n    toast.success(i18n.t(\"proverbs:Proverb deleted successfully\"));\n  } catch (err) {\n    dispatch({\n      type: DELETE_USER_PROVERB_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n// Search user proverbs for admin\nexport const searchUserProverbs = (page, limit, term, field) => async (\n  dispatch,\n  getState\n) => {\n  const { value: toggleValue } = getState().toggle;\n  let searchProverbsUrl = `${API_URL}/proverbs/proverb-search?search_field=${field}&search_value=${term}&page=${page}&limit=${limit}`;\n\n  if (toggleValue === 1) {\n    searchProverbsUrl = searchProverbsUrl + `&approved=false`;\n  }\n  if (toggleValue === 2) {\n    searchProverbsUrl = searchProverbsUrl + `&approved=true`;\n  }\n\n  try {\n    dispatch({\n      type: SEARCH_USER_PROVERBS,\n    });\n    const res = await axios.get(searchProverbsUrl);\n\n    dispatch({\n      type: SEARCH_USER_PROVERBS_SUCCESS,\n      payload: res.data.paginatedProverbs,\n    });\n    //  await dispatch(getAllUserProverbs(activePage, pageSize, isApproved));\n  } catch (err) {\n    dispatch({\n      type: SEARCH_USER_PROVERBS_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","export const selectAuth =  (state) => (state.auth)\n\n","export const selectProverb =  (state) => (state.proverb)","export const selectSearch = (state) => state.search;\n","export const selectPagination = (state) => state.pagination;\n","export const selectToggle = (state) => state.toggle;\n","import { useCallback } from \"react\";\nimport { useDispatch, shallowEqual, useSelector } from \"react-redux\";\nimport { loadUser, register, login, logout } from \"./actions/auth\";\nimport {\n  setSearchTerm,\n  setSearchField,\n  setSearchIconClicked,\n} from \"./actions/search\";\nimport { setLocationChanged } from \"./actions/location\";\nimport {\n  setPage,\n  setPageSize,\n  setPageReset,\n  setPageItems,\n} from \"./actions/pagination\";\nimport { setToggle } from \"./actions/toggle\";\n\nimport {\n  getApprovedProverbs,\n  getUserProverbs,\n  getAllUserProverbs,\n  addProverb,\n  deleteProverb,\n  updateProverb,\n  getProverb,\n  addUserProverb,\n  updateUserProverb,\n  approveUserProverb,\n  deleteUserProverb,\n  getProverbAdmin,\n  searchUserProverbs,\n  searchApprovedProverbs,\n} from \"./actions/proverb\";\nimport {\n  selectAuth,\n  selectProverb,\n  selectSearch,\n  selectPagination,\n  selectToggle,\n} from \"./selectors\";\n\nexport function useAuth() {\n  const dispatch = useDispatch();\n  const { token, isAuthenticated, loading, user } = useSelector(\n    selectAuth,\n    shallowEqual\n  );\n\n  const boundLoadUser = useCallback(\n    (...args) => {\n      return dispatch(loadUser(...args));\n    },\n    [dispatch]\n  );\n\n  const boundRegisterUser = useCallback(\n    (...args) => {\n      return dispatch(register(...args));\n    },\n    [dispatch]\n  );\n\n  const boundLoginUser = useCallback(\n    (...args) => {\n      return dispatch(login(...args));\n    },\n    [dispatch]\n  );\n  const boundLogoutUser = useCallback(\n    (...args) => {\n      return dispatch(logout(...args));\n    },\n    [dispatch]\n  );\n\n  return {\n    token,\n    isAuthenticated,\n    loading,\n    user,\n    loadUser: boundLoadUser,\n    registerUser: boundRegisterUser,\n    loginUser: boundLoginUser,\n    logoutUser: boundLogoutUser,\n  };\n}\n\nexport function useProverb() {\n  const dispatch = useDispatch();\n  const {\n    approvedProverbs,\n    userProverbs,\n    allProverbs,\n    proverb,\n    loading,\n    error,\n    totalPages,\n    totalFound,\n  } = useSelector(selectProverb, shallowEqual);\n\n  const boundGetApprovedProverbs = useCallback(\n    (...args) => {\n      return dispatch(getApprovedProverbs(...args));\n    },\n    [dispatch]\n  );\n  const boundGetUserProverbs = useCallback(\n    (...args) => {\n      return dispatch(getUserProverbs(...args));\n    },\n    [dispatch]\n  );\n\n  const boundGetProverb = useCallback(\n    (...args) => {\n      return dispatch(getProverb(...args));\n    },\n    [dispatch]\n  );\n\n  const boundAddProverb = useCallback(\n    (...args) => {\n      return dispatch(addProverb(...args));\n    },\n    [dispatch]\n  );\n\n  const boundAddUserProverb = useCallback(\n    (...args) => {\n      return dispatch(addUserProverb(...args));\n    },\n    [dispatch]\n  );\n\n  const boundDeleteProverb = useCallback(\n    (...args) => {\n      return dispatch(deleteProverb(...args));\n    },\n    [dispatch]\n  );\n\n  const boundUpdateProverb = useCallback(\n    (...args) => {\n      return dispatch(updateProverb(...args));\n    },\n    [dispatch]\n  );\n  const boundGetAllUserProverbs = useCallback(\n    (...args) => {\n      return dispatch(getAllUserProverbs(...args));\n    },\n    [dispatch]\n  );\n  const boundUpdateUserProverb = useCallback(\n    (...args) => {\n      return dispatch(updateUserProverb(...args));\n    },\n    [dispatch]\n  );\n\n  const boundApproveUserProverb = useCallback(\n    (...args) => {\n      return dispatch(approveUserProverb(...args));\n    },\n    [dispatch]\n  );\n\n  const boundDeleteUserProverb = useCallback(\n    (...args) => {\n      return dispatch(deleteUserProverb(...args));\n    },\n    [dispatch]\n  );\n  const boundGetProverbAdmin = useCallback(\n    (...args) => {\n      return dispatch(getProverbAdmin(...args));\n    },\n    [dispatch]\n  );\n  const boundSearchUserProverbs = useCallback(\n    (...args) => {\n      return dispatch(searchUserProverbs(...args));\n    },\n    [dispatch]\n  );\n  const boundSearchApprovedProverbs = useCallback(\n    (...args) => {\n      return dispatch(searchApprovedProverbs(...args));\n    },\n    [dispatch]\n  );\n  return {\n    approvedProverbs,\n    userProverbs,\n    allProverbs,\n    proverb,\n    loading,\n    error,\n    totalPages,\n    totalFound,\n    getApprovedProverbs: boundGetApprovedProverbs,\n    getUserProverbs: boundGetUserProverbs,\n    getProverb: boundGetProverb,\n    addProverb: boundAddProverb,\n    addUserProverb: boundAddUserProverb,\n    deleteProverb: boundDeleteProverb,\n    updateProverb: boundUpdateProverb,\n    getAllUserProverbs: boundGetAllUserProverbs,\n    updateUserProverb: boundUpdateUserProverb,\n    approveUserProverb: boundApproveUserProverb,\n    deleteUserProverb: boundDeleteUserProverb,\n    getProverbAdmin: boundGetProverbAdmin,\n    searchUserProverbs: boundSearchUserProverbs,\n    searchApprovedProverbs: boundSearchApprovedProverbs,\n  };\n}\n\nexport function useSearch() {\n  const dispatch = useDispatch();\n  const { isActive, searchTerm, field, isButtonClicked } = useSelector(\n    selectSearch,\n    shallowEqual\n  );\n\n  const boundSetSearchTerm = useCallback(\n    (...args) => {\n      return dispatch(setSearchTerm(...args));\n    },\n    [dispatch]\n  );\n\n  const boundSetSearchIconClicked = useCallback(\n    (...args) => {\n      return dispatch(setSearchIconClicked(...args));\n    },\n    [dispatch]\n  );\n\n  const boundSetSearchField = useCallback(\n    (...args) => {\n      return dispatch(setSearchField(...args));\n    },\n    [dispatch]\n  );\n\n  return {\n    setSearchTerm: boundSetSearchTerm,\n    setSearchField: boundSetSearchField,\n    setSearchIconClicked: boundSetSearchIconClicked,\n    isActive,\n    searchTerm,\n    field,\n    isButtonClicked,\n  };\n}\n\nexport function useLocation() {\n  const dispatch = useDispatch();\n  const boundSetLocationChanged = useCallback(\n    (...args) => {\n      return dispatch(setLocationChanged(...args));\n    },\n    [dispatch]\n  );\n\n  return {\n    setLocationChanged: boundSetLocationChanged,\n  };\n}\n\nexport function usePagination() {\n  const dispatch = useDispatch();\n  const { activePage, pageSize, pageItems, pageReset } = useSelector(\n    selectPagination,\n    shallowEqual\n  );\n\n  const boundSetPageSize = useCallback(\n    (...args) => {\n      return dispatch(setPageSize(...args));\n    },\n    [dispatch]\n  );\n  const boundSetPageItems = useCallback(\n    (...args) => {\n      return dispatch(setPageItems(...args));\n    },\n    [dispatch]\n  );\n  const boundSetPage = useCallback(\n    (...args) => {\n      return dispatch(setPage(...args));\n    },\n    [dispatch]\n  );\n\n  const boundSetPageReset = useCallback(\n    (...args) => {\n      return dispatch(setPageReset(...args));\n    },\n    [dispatch]\n  );\n  return {\n    activePage,\n    pageSize,\n    pageItems,\n    pageReset,\n    setPageSize: boundSetPageSize,\n    setPage: boundSetPage,\n    setPageItems: boundSetPageItems,\n    setPageReset: boundSetPageReset,\n  };\n}\n\nexport function useToggle() {\n  const dispatch = useDispatch();\n  const { value, label } = useSelector(selectToggle, shallowEqual);\n\n  const boundSetToggle = useCallback(\n    (...args) => {\n      return dispatch(setToggle(...args));\n    },\n    [dispatch]\n  );\n\n  return {\n    value,\n    label,\n    setToggle: boundSetToggle,\n  };\n}\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nexport default function Input({\n  plaintext = false,\n  disabled = false,\n  required = false,\n  pClassName,\n  label,\n  labelClassName,\n  controlId,\n  children,\n  error,\n  inputTextLeft,\n  inputTextRight,\n  inputTextRightOnClick,\n  inputRef,\n  ...props\n}) {\n  return (\n    <Form.Group className={pClassName} controlId={controlId}>\n      <Form.Label className={labelClassName}>\n        {label}\n        {error}\n      </Form.Label>\n      <InputGroup>\n        <InputGroup.Prepend>\n          {inputTextLeft && (\n            <InputGroup.Text className=\"py-0\">{inputTextLeft}</InputGroup.Text>\n          )}\n        </InputGroup.Prepend>\n        <Form.Control\n          required={required}\n          disabled={disabled}\n          plaintext={plaintext}\n          ref={inputRef}\n          {...props}\n        >\n          {children}\n        </Form.Control>\n        <InputGroup.Prepend onClick={inputTextRightOnClick}>\n          {inputTextRight && (\n            <InputGroup.Text className=\"py-0\">{inputTextRight}</InputGroup.Text>\n          )}\n        </InputGroup.Prepend>\n      </InputGroup>\n    </Form.Group>\n  );\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as icons from '@fortawesome/free-solid-svg-icons'\n\nexport default function Icon ({ icon, title, ...props }) {\n  return (\n    <FontAwesomeIcon\n      title={title}\n      icon={icons[icon]}\n      style={{ cursor: 'pointer', marginRight: '6px', pointerEvents: 'stroke' }}\n      {...props}\n    />\n  )\n}\n","import React from \"react\";\nimport { Button as ButtonBootstrap } from \"react-bootstrap\";\nimport Icon from \"./Icon\";\nimport './Button.css'\n\nexport default function Button({\n  text,\n  disabled = false,\n  onClick = undefined,\n  type = \"button\",\n  icon,\n  ...props\n}) {\n \n  return (\n    <ButtonBootstrap\n      disabled={disabled}\n      onClick={onClick}\n      type={type}\n      {...props}\n    >\n      {icon && <Icon icon={icon} />}\n      <span>{text}</span>\n    </ButtonBootstrap>\n  );\n}\n","import React from 'react'\nimport './Section.css'\n\nconst Section = ({ children, title, id, className = '', containerClass }) => {\n  return (\n    <section id={id} className={`section-custom ${className}`}>\n      <div\n        className={`d-flex justify-content-between flex-column flex-lg-row mx-5 align-items-center ${containerClass}`}\n      >\n        <h1 className='text-center'>{title}</h1>\n        {children}\n      </div>\n    </section>\n  )\n}\n\nexport default Section\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Breadcrumb as BreadcrumbBootstrap } from \"react-bootstrap\";\nimport \"./Breadcrumb.css\";\n\nconst Breadcrumb = ({ activePage, className = \"\" }) => {\n  return (\n    <BreadcrumbBootstrap className={`breadcrumb-custom ${className}`}>\n      <BreadcrumbBootstrap.Item linkAs={Link} linkProps={{ to: \"/\" }}>\n        Home\n      </BreadcrumbBootstrap.Item>\n      <BreadcrumbBootstrap.Item active>{activePage}</BreadcrumbBootstrap.Item>\n    </BreadcrumbBootstrap>\n  );\n};\n\nexport default Breadcrumb;\n","export const REGISTER_INITIAL_DATA = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  country: \"\",\n  phone: \"\",\n  newsletters: true,\n  errors: {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  },\n};\n\nexport const LOGIN_INITIAL_DATA = {\n  email: \"\",\n  password: \"\",\n};\n\nexport const PROVERB_INITIAL_DATA = {\n  proverb: \"\",\n  translation: \"\",\n  explanation: \"\",\n  errors: {\n    proverb: \"\",\n    translation: \"\",\n    explanation: \"\",\n  },\n};\n","import React from 'react'\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\nimport GoogleLogin from 'react-google-login'\nimport Button from '../Button'\nimport { useTranslation } from 'react-i18next'\nimport { toast } from 'react-toastify'\n\nexport default function SocialLogin (props) {\n  const { t } = useTranslation('auth')\n  return (\n    <div className='socialLoginButtons'>\n      <FacebookLogin\n        appId={process.env.REACT_APP_FACEBOOK_KEY}\n        callback={props.handleFacebookSignUp}\n        fields='name,email,id'\n        render={renderProps => (\n          <Button\n            icon='faUser'\n            variant='outline-dark'\n            text={t('Continue using Facebook')}\n            onClick={renderProps.onClick}\n          />\n        )}\n      />\n      <GoogleLogin\n        clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n        render={renderProps => (\n          <Button\n            icon='faUser'\n            onClick={renderProps.onClick}\n            disabled={renderProps.disabled}\n            variant='outline-dark'\n            text={t('Continue using Google')}\n          />\n        )}\n        onSuccess={props.handleGoogleSignUp}\n        onFailure={error => toast.error(error)}\n        cookiePolicy={'single_host_origin'}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useAuth } from './../../redux/hooks'\nimport Input from './../../components/Input'\nimport Button from './../../components/Button'\nimport Icon from './../../components/Icon'\nimport Section from './../../components/Section'\nimport Breadcrumb from './../../components/Breadcrumb'\nimport { useTranslation } from 'react-i18next'\n\nimport { Form, Container } from 'react-bootstrap'\nimport { LOGIN_INITIAL_DATA } from './../../helpers/formData'\n\nimport './Login.css'\nimport SocialLogin from '../../components/sign up and log in/SocialLogin'\n\nconst Login = props => {\n  const { t } = useTranslation('auth')\n  const { loginUser, isAuthenticated, user } = useAuth()\n\n  const [formData, setFormData] = useState(LOGIN_INITIAL_DATA)\n\n  const { email, password } = formData\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n\n  const onSubmit = async e => {\n    e.preventDefault()\n    loginUser({ email, password })\n  }\n\n  if (user?.role === 'admin') {\n    return <Redirect to='/admin-dashboard' />\n  } else if (isAuthenticated) {\n    return <Redirect to='/dashboard' />\n  }\n\n  const handleGoogleSignUp = response => {\n    const email = response.profileObj.email\n    const password = response.googleId\n    loginUser({ email, password })\n  }\n  const handleFacebookSignUp = response => {\n    const { email, id } = response\n    loginUser({ email, id })\n  }\n  return (\n    <>\n      <Section\n        id='page-title'\n        title={props.title || t('MY ACCOUNT')}\n        containerClass='d-flex justify-content-between mx-5 align-items-center'\n      >\n        <Breadcrumb activePage='Login' />\n      </Section>\n      <Container className='login-container'>\n        <p className='login-title'>\n          <Icon icon={'faUnlock'} fixedWidth />\n          {props.loginMsg || t('login in your account')}\n        </p>\n        <SocialLogin\n          handleFacebookSignUp={handleFacebookSignUp}\n          handleGoogleSignUp={handleGoogleSignUp}\n          facebookBtnTxt={t('FbLogin')}\n          googleBtnTxt={t('GoogleLogin')}\n        />\n        <Form>\n          <Input\n            label={t('email')}\n            id='login-email'\n            type='email'\n            value={email}\n            name='email'\n            onChange={onChange}\n            placeholder={t('email_place_holder')}\n            required\n            autoComplete='off'\n            labelClassName='input-form-label my-3'\n            className='rounded'\n          />\n          <Input\n            label={t('password')}\n            id='login-password'\n            type='password'\n            value={password}\n            name='password'\n            onChange={onChange}\n            placeholder={t('password_place_holder')}\n            autoComplete='off'\n            minLength='6'\n            labelClassName='input-form-label my-3'\n            className='mb-3 rounded'\n          />\n          <Button\n            variant='info'\n            text={t('Login')}\n            onClick={onSubmit}\n            color='white'\n            type='submit'\n            className='button-custom float-right'\n            id='user-login-button'\n          />\n        </Form>\n\n        {!props.signUp || (\n          <p className='my-1'>\n            Don't have an account? <Link to='/register'>Sign Up</Link>\n          </p>\n        )}\n      </Container>\n    </>\n  )\n}\n\nexport default Login\n","import React from \"react\";\nimport { Form as FormBootstrap } from \"react-bootstrap\";\nimport \"./Checkbox.css\";\n\nconst Checkbox = ({ id, pClassName, ...props }) => {\n  return (\n    <FormBootstrap.Group id={id} className={pClassName}>\n      <FormBootstrap.Check type=\"checkbox\" {...props} />\n    </FormBootstrap.Group>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState, useEffect } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Form, Container } from 'react-bootstrap'\nimport { toast } from 'react-toastify'\nimport countryList from 'country-list'\n\nimport SocialLogin from '../../components/sign up and log in/SocialLogin'\nimport Input from './../../components/Input'\nimport Button from './../../components/Button'\nimport Icon from './../../components/Icon'\nimport Checkbox from './../../components/Checkbox'\nimport Section from './../../components/Section'\nimport Breadcrumb from './../../components/Breadcrumb'\nimport { REGISTER_INITIAL_DATA } from './../../helpers/formData'\nimport { validateEmail, validateForm } from './../../helpers/functions'\n\nimport { useAuth } from './../../redux/hooks'\nimport { useTranslation } from 'react-i18next'\n\nimport './Register.css'\n\nconst Register = () => {\n  const { registerUser, isAuthenticated } = useAuth()\n  const [formData, setFormData] = useState(REGISTER_INITIAL_DATA)\n  const [disabled, setDisabled] = useState(true)\n\n  const { t } = useTranslation('auth')\n\n  const {\n    name,\n    email,\n    password,\n    confirmPassword,\n    country,\n    newsletters,\n    phone,\n    errors\n  } = formData\n\n  useEffect(() => {\n    const isFilled = [name, email, password, confirmPassword].every(data =>\n      Boolean(data)\n    )\n    isFilled ? setDisabled(false) : setDisabled(true)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formData])\n\n  const onChange = e => {\n    e.preventDefault()\n    const { name, value, checked } = e.target\n    switch (name) {\n      case 'name':\n        errors.name = value.length < 1 ? 'Name must be filled' : ''\n        break\n      case 'email':\n        errors.email = validateEmail(value) ? '' : 'Email is not valid!'\n        break\n      case 'password':\n        errors.password =\n          value.length < 6 ? 'Password must be minimum 6 characters!' : ''\n        break\n      case 'confirmPassword':\n        errors.confirmPassword =\n          password !== value ? 'Passwords do not match' : ''\n        break\n      default:\n        break\n    }\n    if (name === 'newsletters') {\n      return setFormData({ ...formData, [name]: checked })\n    }\n    setFormData({ ...formData, [name]: value })\n  }\n\n  const onSubmit = async e => {\n    e.preventDefault()\n    if (validateForm(errors)) {\n      Object.values(errors).forEach(\n        error =>\n          error &&\n          toast(error, {\n            className: 'toast-auth-error',\n            position: 'top-left',\n            autoClose: false,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          })\n      )\n      setFormData({ ...formData, password: '', confirmPassword: '' })\n    } else {\n      registerUser({\n        name,\n        email,\n        password,\n        country,\n        newsletters,\n        phone\n      })\n    }\n  }\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />\n  }\n\n  const countries = [{ code: 'ZERO' }].concat(countryList.getData())\n\n  const handleGoogleSignUp = response => {\n    const email = response.profileObj.email\n    const name = response.profileObj.name\n    const password = response.googleId\n    registerUser({\n      name,\n      email,\n      password\n    })\n  }\n  const handleFacebookSignUp = response => {\n    const { email, name, id } = response\n    registerUser({\n      name,\n      email,\n      password: id\n    })\n  }\n  return (\n    <>\n      <Section id='register-section' title={t('MY ACCOUNT')}>\n        <Breadcrumb activePage='Register' />\n      </Section>\n      <Container className='register-container'>\n        <p className='register-title'>\n          <Icon icon={'faUser'} fixedWidth />\n          {t('New Sign up? Register for an Account')}\n        </p>\n        <SocialLogin\n          handleFacebookSignUp={handleFacebookSignUp}\n          handleGoogleSignUp={handleGoogleSignUp}\n          facebookBtnTxt={t('FbLogin')}\n          googleBtnTxt={t('GoogleLogin')}\n        />\n        <Form>\n          <Input\n            label={t('Name')}\n            id='register-name'\n            type='text'\n            value={name}\n            name='name'\n            onChange={onChange}\n            placeholder={t('Name')}\n            autoComplete='off'\n            labelClassName='input-form-label my-3'\n            className='rounded'\n          />\n          <Input\n            label={t('email')}\n            id='register-email'\n            type='email'\n            value={email}\n            name='email'\n            onChange={onChange}\n            placeholder={t('email')}\n            required\n            autoComplete='off'\n            labelClassName='input-form-label my-3'\n            className='rounded'\n          />\n\n          <Input\n            label={t('password')}\n            id='register-password'\n            type='password'\n            value={password}\n            name='password'\n            onChange={onChange}\n            placeholder={t('password')}\n            autoComplete='off'\n            minLength='6'\n            labelClassName='input-form-label my-3'\n            className='rounded'\n          />\n          <Input\n            label={t('password')}\n            id='register-password-2'\n            type='password'\n            value={confirmPassword}\n            name='confirmPassword'\n            onChange={onChange}\n            placeholder={t('Confirm Password')}\n            autoComplete='off'\n            minLength='6'\n            labelClassName='input-form-label my-3'\n            className='rounded'\n          />\n          <Input\n            as='select'\n            size='sm'\n            id='country'\n            label={t('Country')}\n            onChange={onChange}\n            value={country}\n            name='country'\n            autoComplete='off'\n            labelClassName='input-form-label my-3'\n            className='rounded'\n          >\n            <>\n              {countries.map(country => {\n                return (\n                  <option disabled={country.code === 'ZERO'} key={country.code}>\n                    {country.name}\n                  </option>\n                )\n              })}\n            </>\n          </Input>\n          <Input\n            label={t('Phone')}\n            id='register-phone'\n            type='text'\n            value={phone}\n            name='phone'\n            onChange={onChange}\n            placeholder={t('Phone')}\n            autoComplete='off'\n            labelClassName='input-form-label my-3'\n            className='rounded'\n          />\n          <Checkbox\n            id='subscribe-newsletters'\n            label={t('Subscribe to newsletters')}\n            checked={newsletters}\n            name='newsletters'\n            onChange={onChange}\n            className='input-form-label my-4'\n          />\n          <hr className='my-3' />\n          <Button\n            variant='info'\n            text={t('Register')}\n            onClick={onSubmit}\n            color='white'\n            type='submit'\n            className='button-custom float-right'\n            id='user-register-button'\n            disabled={disabled}\n          />\n        </Form>\n        <p className='my-1'>\n          {t('Already have an account?')}{' '}\n          <Link to='/login'>{t('Sign In')}</Link>\n        </p>\n      </Container>\n    </>\n  )\n}\n\nexport default Register\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst NavbarLink = ({ title, ...props }) => {\n  return (\n    <Nav.Link as={Link} {...props}>\n      {title}\n    </Nav.Link>\n  )\n}\n\nexport default NavbarLink\n","import React from \"react\";\nimport { NavDropdown } from \"react-bootstrap\";\nimport NavbarLink from \"./NavbarLink\";\nimport { useTranslation } from \"react-i18next\";\n\nconst NavbarDropdown = ({ isAuthenticated, user, dropdownLinks }) => {\n  const { t } = useTranslation(\"homePage\");\n  return (\n    <NavDropdown\n      className=\"navbar-dropdown\"\n      title={isAuthenticated && user ? `${user.name}` : t(\"Home\")}\n      id=\"navbar-dropdown\"\n    >\n      {dropdownLinks.map((link, i) => {\n        if (link.isAuth === isAuthenticated) {\n          return (\n            <NavbarLink\n              key={\"navbarlink\" + i}\n              to={link.to}\n              className={link.className}\n              title={link.title}\n              onClick={link?.onClick}\n            />\n          );\n        }\n        return null;\n      })}\n    </NavDropdown>\n  );\n};\n\nexport default NavbarDropdown;\n","import React from \"react\";\nimport Icon from \"./Icon\";\nimport { NavDropdown } from \"react-bootstrap\";\nimport i18n from \"i18next\";\n\nconst ChangeLang = () => {\n  const languages = [\n    { title: \"Eng\", code: \"en\" },\n    { title: \"عربي\", code: \"ar\" },\n  ];\n  const handleLang = (lang) => {\n    i18n.changeLanguage(lang);\n  };\n  return (\n    <NavDropdown\n      className=\"navbar-dropdown\"\n      title={<Icon size=\"2x\" icon=\"faLanguage\" />}\n    >\n      {languages.map((lang, i) => (\n        <button\n          className=\"dropdown-item\"\n          key={\"translation\" + i}\n          onClick={() => {\n            handleLang(lang.code);\n          }}\n        >\n          {lang.title}\n        </button>\n      ))}\n    </NavDropdown>\n  );\n};\n\nexport default ChangeLang;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Navbar as NavbarBootstrap, Nav } from 'react-bootstrap'\nimport NavbarLink from './NavbarLink'\nimport NavbarDropdown from './NavbarDropdown'\nimport ChangeLang from '../components/ChangeLang'\nimport './Navbar.css'\n\nconst NavbarComponent = ({\n  brandLogo,\n  isAuthenticated,\n  user,\n  links,\n  dropdownLinks\n}) => {\n  return (\n    <NavbarBootstrap className='navbar-custom' bg='transparent' expand='lg'>\n      <NavbarBootstrap.Brand className='navbar-brand-logo' as={Link} to='/'>\n        <img src={brandLogo} className='navbar-logo' alt='idomia-logo' />\n      </NavbarBootstrap.Brand>\n\n      <div className='d-flex flex-row-reverse'>\n        <NavbarBootstrap.Toggle aria-controls='basic-navbarB-nav' />\n        <NavbarDropdown\n          isAuthenticated={isAuthenticated}\n          user={user}\n          dropdownLinks={dropdownLinks}\n        />\n      </div>\n      <NavbarBootstrap.Collapse id='basic-navbarB-nav'>\n        <Nav className='ml-auto'>\n          {links.map((link, i) => {\n            if (link.isAuth === isAuthenticated || link.isAuth === 'all') {\n              return (\n                <NavbarLink\n                  key={'links' + i}\n                  to={link.to}\n                  className={link.className}\n                  title={link.title}\n                  onClick={link?.onClick}\n                />\n              )\n            }\n            return null\n          })}\n          <ChangeLang />\n        </Nav>\n      </NavbarBootstrap.Collapse>\n    </NavbarBootstrap>\n  )\n}\n\nexport default NavbarComponent\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth, useSearch } from \"./../../redux/hooks\";\nimport NavbarComponent from \"./../../components/Navbar\";\nimport IdiomiaLogo from \"./../../images/idiomia-11.png\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Navbar = () => {\n  const { isAuthenticated, logoutUser, user } = useAuth();\n  const { setSearchIconClicked, isButtonClicked } = useSearch();\n  const history = useHistory();\n  const isAdminRole = user?.role === \"admin\";\n  const { t } = useTranslation([\"homePage\", \"user\", \"auth\"]);\n  const handleSearchClick = (e) => {\n    e.preventDefault();\n    history.push(\"/\");\n    setSearchIconClicked(!isButtonClicked);\n  };\n  const links = [\n    {\n      className: \"navbar-link\",\n      to: \"#\",\n      title: t(\"Search\"),\n      isAuth: \"all\",\n      onClick: handleSearchClick,\n    },\n    {\n      className: \"navbar-link\",\n      to: \"/about\",\n      title: t(\"about\"),\n      isAuth: false,\n    },\n    {\n      className: \"navbar-link\",\n      to: \"/login\",\n      title: t(\"login\"),\n      isAuth: false,\n    },\n    {\n      className: \"navbar-link\",\n      to: \"/register\",\n      title: t(\"register\"),\n      isAuth: false,\n    },\n    {\n      className: isAdminRole ? \"navbar-link\" : \"d-none\",\n      to: isAdminRole ? \"/admin-dashboard\" : \"\",\n      title: isAdminRole && t(\"ADMIN\"),\n      isAuth: true,\n    },\n    {\n      className: \"navbar-link\",\n      to: \"/dashboard\",\n      title: t(\"DASHBOARD\"),\n      isAuth: true,\n    },\n    {\n      className: \"navbar-link\",\n      to: \"/\",\n      title: t(\"logout\"),\n      isAuth: true,\n      onClick: logoutUser,\n    },\n  ];\n  const dropdownLinks = [\n    {\n      className: \"dropdown-item\",\n      to: \"/login\",\n      title: t(\"login\"),\n      isAuth: false,\n    },\n    {\n      className: \"dropdown-item\",\n      to: \"/register\",\n      title: t(\"register\"),\n      isAuth: false,\n    },\n    {\n      className: \"navbar-link\",\n      to: \"/dashboard\",\n      title: t(\"DASHBOARD\"),\n      isAuth: true,\n    },\n    {\n      className: isAdminRole ? \"navbar-link\" : \"d-none\",\n      to: isAdminRole ? \"/admin-dashboard\" : \"\",\n      title: isAdminRole && t(\"ADMIN\"),\n      isAuth: true,\n    },\n    {\n      className: \"dropdown-item\",\n      to: \"/\",\n      title: t(\"logout\"),\n      isAuth: true,\n      onClick: logoutUser,\n    },\n  ];\n\n  return (\n    <NavbarComponent\n      brandLogo={IdiomiaLogo}\n      isAuthenticated={isAuthenticated}\n      user={user}\n      links={links}\n      dropdownLinks={dropdownLinks}\n    />\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst FlexTableHeader = ({ titleData }) => {\n  return (\n    <div className=\"flexTable-row flexTable-row--head\">\n      <div className=\"flexTable-row flexTable-row--head\">\n        {titleData.map((item, k) => (\n          <div\n            key={\"header\" + k}\n            className={`flexTable-cell ${item.fieldName}-cell column-heading`}\n          >\n            {\" \"}\n            {item.title}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FlexTableHeader;\n","import React from 'react'\n\nconst FlexTableCell = ({ title, item }) => {\n  return (\n    <div className={`flexTable-cell ${title.fieldName}-cell`}>\n      <div className='flexTable-cell--heading'>{title.title}</div>\n      <div className={`flexTable-cell--content ${title.fieldName}-content`}>\n        {item[title.fieldName]?.name || item[title.fieldName]}\n      </div>\n    </div>\n  )\n}\n\nexport default FlexTableCell\n","import React from \"react\";\nimport Icon from \"./Icon\";\n\nconst FlexTableIconCell = ({ title, item, iconClick }) => {\n  return (\n    <div className={`flexTable-cell ${title.fieldName}-cell`} name={item.id}>\n      <div className=\"flexTable-cell--heading\">{title.title}</div>\n      <div className={`flexTable-cell--content ${title.fieldName}-content`}>\n        {title.icons?.map((icon, i) => (\n          <Icon\n            title={icon}\n            key={\"iconn\" + i}\n            icon={\"fa\" + icon}\n            onClick={iconClick}\n            id={item._id}\n            size={\"1x\"}\n            fixedWidth\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FlexTableIconCell;\n","import React from 'react'\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  FacebookMessengerIcon,\n  FacebookMessengerShareButton,\n  TelegramShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TumblrShareButton,\n  WhatsappShareButton,\n  EmailIcon,\n  FacebookIcon,\n  LinkedinIcon,\n  TelegramIcon,\n  TumblrIcon,\n  TwitterIcon,\n  WhatsappIcon\n} from 'react-share'\nimport './SocialMediaShare.css'\n\nfunction SocialMediaShare ({ item }) {\n  const { proverb, translation, explanation } = item\n  const shareUrl = 'https://idiomia2020.web.app/'\n  const quote = `\n  I found this awesome proverb. \n  It says \"${proverb}\" which means literary \"${translation}\" and figuratively \"${explanation}.\"`\n\n  return (\n    <div className='social_media_share'>\n      <FacebookShareButton url={shareUrl} quote={quote}>\n        <FacebookIcon size={32} round={true} />\n      </FacebookShareButton>\n      <FacebookMessengerShareButton\n        url={shareUrl}\n        appId={process.env.REACT_APP_FACEBOOK_KEY}\n      >\n        <FacebookMessengerIcon size={32} round />\n      </FacebookMessengerShareButton>\n      <TwitterShareButton url={shareUrl} title={quote}>\n        <TwitterIcon size={32} round={true} />\n      </TwitterShareButton>\n      <LinkedinShareButton url={shareUrl}>\n        <LinkedinIcon size={32} round />\n      </LinkedinShareButton>\n      <EmailShareButton url={shareUrl} subject={proverb} body={quote}>\n        <EmailIcon size={32} round={true} />\n      </EmailShareButton>\n      <TelegramShareButton url={shareUrl} title={quote}>\n        <TelegramIcon size={32} round={true} />\n      </TelegramShareButton>\n      <TumblrShareButton url={shareUrl} title={quote}>\n        <TumblrIcon size={32} round={true} />\n      </TumblrShareButton>\n      <WhatsappShareButton url={shareUrl} title={quote}>\n        <WhatsappIcon size={32} round={true} />\n      </WhatsappShareButton>\n    </div>\n  )\n}\n\nexport default SocialMediaShare\n","import React from 'react'\nimport FlexTableHeader from './FlexTableHeader'\nimport FlexTableCell from './FlexTableCell'\nimport FlexTableIconCell from './FlexTableIconCell'\nimport SocialMediaShare from './SocialMediaShare'\nimport './FlexTable.css'\n\nconst FlexTable = ({\n  titleData = [],\n  data = [],\n  tableId,\n  iconClick,\n  tableType = '',\n  rowFooter\n}) => {\n  return (\n    <div id={tableId} className={`flexTable ${tableType}`}>\n      <FlexTableHeader titleData={titleData} />\n      {data.map((item, i) => (\n        <div className='flexTable-row-container'>\n          <div\n            className={`flexTable-row ${\n              !item.adminApproval\n                ? 'flexTable-row-pending'\n                : 'flexTable-row-approved'\n            }`}\n            key={'rows' + i}\n          >\n            {titleData.map((title, k) => {\n              if (item[title.fieldName]) {\n                return (\n                  <FlexTableCell key={'columns' + k} title={title} item={item} />\n                )\n              }\n              return (\n                <FlexTableIconCell\n                  key={`iconcell${k + k}`}\n                  title={title}\n                  item={item}\n                  iconClick={iconClick}\n                />\n              )\n            })}\n          </div>\n          {rowFooter === item._id && <SocialMediaShare item={item} />}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default FlexTable\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Pagination as PaginationBootstrap } from \"react-bootstrap\";\nimport \"./Pagination.css\";\n\nconst Pagination = ({\n  items,\n  totalPages,\n  paginationClass,\n  setActivePage,\n  setActivePageItems,\n  activePage,\n  shouldResetPagination,\n  setShouldResetPagination,\n}) => {\n  const [pages, setPages] = useState([]);\n  const setPage = useCallback(\n    (page) => {\n      setActivePageItems(items);\n      if (page < 1 || page > totalPages) {\n        return;\n      }\n      setActivePage(page);\n      const newPages = createPages();\n      setPages(newPages);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [items]\n  );\n\n  useEffect(\n    function activatePagination() {\n      if (shouldResetPagination) {\n        setPage(1);\n        return;\n      }\n      setPage(activePage);\n    },\n    [activePage, setPage, shouldResetPagination, totalPages]\n  );\n\n  useEffect(() => {\n    if (items.length === 0 && activePage - 1 === totalPages && activePage > 1) {\n      return setPage(activePage - 1);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [items.length, totalPages]);\n\n  const calculateStartAndEndPage = () => {\n    const MAX_DISPLAYED_PAGE_NUMBERS = 6;\n    if (totalPages <= MAX_DISPLAYED_PAGE_NUMBERS) {\n      return {\n        startPage: 1,\n        endPage: totalPages,\n      };\n    }\n\n    if (activePage <= 4) {\n      return {\n        startPage: 1,\n        endPage: 7,\n      };\n    }\n\n    if (activePage + 3 >= totalPages) {\n      return {\n        startPage: totalPages - 6,\n        endPage: totalPages,\n      };\n    }\n\n    // Default return\n    return {\n      startPage: activePage - 3,\n      endPage: activePage + 3,\n    };\n  };\n\n  const buildPagesArray = (startPage, endPage) => {\n    const pages = [...Array(endPage + 1 - startPage).keys()].map((i) => {\n      if (i === 0) {\n        return { page: 1, value: true };\n      }\n      if (activePage >= 5 && i === 1) {\n        return { page: startPage + i, value: false };\n      }\n      if (activePage + 3 >= totalPages && i >= 4) {\n        return { page: startPage + i, value: true };\n      }\n      if (i < 5) {\n        return { page: startPage + i, value: true };\n      }\n      if (i < 6) {\n        return { page: startPage + i, value: false };\n      }\n      if (i === 6) {\n        return { page: totalPages, value: true };\n      }\n      return null;\n    });\n\n    return pages;\n  };\n\n  const createPages = () => {\n    const { startPage, endPage } = calculateStartAndEndPage();\n    return buildPagesArray(startPage, endPage);\n  };\n\n  const handleNavigatePage = (isPageReset, activePageNumber) => (e) => {\n    e.preventDefault();\n    setShouldResetPagination(isPageReset);\n    setPage(activePageNumber);\n  };\n\n  // don't display pagination if there is only 1 page\n  if (!pages || pages.length <= 1 || totalPages === 0) {\n    return null;\n  }\n\n  return (\n    <PaginationBootstrap className={`${paginationClass}`}>\n      <PaginationBootstrap.First onClick={handleNavigatePage(false, 1)} />\n      <PaginationBootstrap.Prev\n        onClick={handleNavigatePage(false, activePage - 1)}\n      />\n\n      {pages.map((page, i) => (\n        <PaginationBootstrap.Item\n          active={page.value && activePage === page.page}\n          key={\"page\" + i}\n          onClick={page.value && handleNavigatePage(false, page.page)}\n          className={!page.value ? \"disabled\" : \"\"}\n        >\n          {page.value ? page.page : \"...\"}\n        </PaginationBootstrap.Item>\n      ))}\n\n      <PaginationBootstrap.Next\n        onClick={handleNavigatePage(false, activePage + 1)}\n      />\n      <PaginationBootstrap.Last\n        onClick={handleNavigatePage(false, totalPages)}\n      />\n    </PaginationBootstrap>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { Spinner as SpinnerB } from 'react-bootstrap';\n\nconst Spinner = ({ animation, variant, size, role, className }) => {\n  return <SpinnerB animation={animation} variant={variant} size={size} role={role} className={className} />;\n};\n\nexport default Spinner;\n","export const homepageTableTitle = [\n  {\n    title: 'Proverb',\n    fieldName: 'proverb',\n    className: 'col-xs-2'\n  },\n  {\n    title: 'Translation',\n    fieldName: 'translation',\n    className: 'col-xs-2'\n  },\n  {\n    title: 'Explanation',\n    fieldName: 'explanation',\n    className: 'col-xs-3'\n  },\n  {\n    title: '',\n    fieldName: 'icon',\n\n    icons: ['Share'],\n    className: 'col-xs-3'\n  }\n]\n\nexport const userDashboardTitle = [\n  {\n    title: 'Proverb',\n    fieldName: 'proverb',\n    className: 'col-xs-2'\n  },\n  {\n    title: 'Translation',\n    fieldName: 'translation',\n    className: 'col-xs-2'\n  },\n  {\n    title: 'Explanation',\n    fieldName: 'explanation',\n    className: 'col-xs-3'\n  },\n  {\n    title: '',\n    fieldName: 'icon',\n\n    icons: ['Share', 'Edit', 'TrashAlt'],\n    className: 'col-xs-3'\n  }\n]\n\nexport const adminDashboardTitle = [\n  {\n    title: 'Proverb',\n    fieldName: 'proverb',\n    className: 'col-xs-2'\n  },\n  {\n    title: 'Translation',\n    fieldName: 'translation',\n    className: 'col-xs-2'\n  },\n  {\n    title: 'Explanation',\n    fieldName: 'explanation',\n    className: 'col-xs-3'\n  },\n  {\n    title: '',\n    fieldName: 'icon',\n\n    icons: ['Share', 'Edit', 'TrashAlt', 'Plus', 'Minus'],\n    className: 'col-xs-3'\n  }\n]\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Container } from 'react-bootstrap'\nimport FlexTable from '../../components/FlexTable'\nimport Pagination from '../../components/Pagination'\nimport Spinner from '../../components/Spinner'\nimport { useProverb, useSearch, usePagination } from './../../redux/hooks'\nimport { homepageTableTitle } from './../../helpers/flexTableData'\n\nconst ProverbList = () => {\n  const [showSocialMediaBtns, setShowSocialMediaBtns] = useState(null)\n  const searchTimeOut = useRef(null)\n  const {\n    loading,\n    approvedProverbs,\n    getApprovedProverbs,\n    totalPages,\n    searchApprovedProverbs\n  } = useProverb()\n  const { searchTerm, field: searchField } = useSearch()\n  const {\n    activePage,\n    pageSize,\n    pageItems,\n    setPage,\n    setPageItems,\n    pageReset,\n    setPageReset\n  } = usePagination()\n\n  useEffect(\n    function fetchApprovedProverbs () {\n      if (!searchTerm) {\n        getApprovedProverbs(activePage, pageSize)\n      }\n    },\n    [getApprovedProverbs, activePage, pageSize, searchTerm]\n  )\n\n  useEffect(\n    function searchProverbs () {\n      searchTimeOut.current = setTimeout(() => {\n        if (searchTerm) {\n          searchApprovedProverbs(activePage, pageSize, searchTerm, searchField)\n        }\n      }, 300)\n\n      return () => {\n        clearTimeout(searchTimeOut.current)\n      }\n    },\n    [activePage, pageSize, searchField, searchTerm, searchApprovedProverbs]\n  )\n\n  if (loading && approvedProverbs.length === 0) {\n    return (\n      <div className='position-absolute' style={{ top: '50%', left: '50%' }}>\n        <Spinner animation='grow' />\n      </div>\n    )\n  }\n\n  const handleSocialButtons = e => {\n    const id = e.target?.id\n    showSocialMediaBtns\n      ? setShowSocialMediaBtns(null)\n      : setShowSocialMediaBtns(id)\n  }\n\n  return (\n    <Container>\n      <Pagination\n        id='proverb-list-top-table-pagination'\n        items={approvedProverbs}\n        setActivePage={setPage}\n        setActivePageItems={setPageItems}\n        pageSize={pageSize}\n        activePage={activePage}\n        paginationClass='proverb-list-table-pagination d-flex justify-content-center align-items-center'\n        shouldResetPagination={pageReset}\n        setShouldResetPagination={setPageReset}\n        totalPages={totalPages}\n      />\n      {totalPages > 0 && (\n        <FlexTable\n          data={pageItems}\n          titleData={homepageTableTitle}\n          tableId={'proverb-list-flex-table'}\n          tableType='homepage-flexTable'\n          rowFooter={showSocialMediaBtns}\n          iconClick={handleSocialButtons}\n        />\n      )}\n    </Container>\n  )\n}\n\nexport default ProverbList\n","import React, { useState, useEffect } from \"react\";\nimport i18next from 'i18next'\nimport { toast } from \"react-toastify\";\nimport { Form } from \"react-bootstrap\";\nimport Input from \"./../../components/Input\";\nimport Button from \"./../../components/Button\";\nimport { isArabic, validateForm } from \"./../../helpers/functions\";\nimport { PROVERB_INITIAL_DATA } from \"./../../helpers/formData\";\nimport { useProverb, useAuth } from \"./../../redux/hooks\";\nimport \"./Proverb.css\";\n\nconst Proverb = ({ actionType, handleCloseModal }) => {\n  const { isAuthenticated } = useAuth();\n  const {\n    addProverb,\n    addUserProverb,\n    updateProverb,\n    proverb: proverbObj,\n    loading,\n    updateUserProverb,\n  } = useProverb();\n  const isNewProverb = !loading && actionType === \"Add\";\n  const proverbFormValues = isNewProverb ? PROVERB_INITIAL_DATA : proverbObj;\n\n  const [formData, setFormData] = useState(proverbFormValues);\n  const [disabled, setDisabled] = useState(true);\n\n  const { proverb, translation, explanation, errors } = formData;\n\n  useEffect(() => {\n    if (!(\"errors\" in proverbObj)) {\n      proverbObj.errors = {\n        proverb: \"\",\n        translation: \"\",\n        explanation: \"\",\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [proverbObj]);\n\n  useEffect(\n    function shouldButtonBeDisabled() {\n      const isFilled = [proverb, translation, explanation].every((data) =>\n        Boolean(data)\n      );\n      isFilled ? setDisabled(false) : setDisabled(true);\n    },\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [formData]\n  );\n\n  const handleInputChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"proverb\":\n        const result = isArabic(value);\n        errors.proverb =\n          value.length < 1 || !result\n            ? \"Proverb input should be in Arabic\"\n            : \"\";\n        break;\n      case \"translation\":\n        errors.translation =\n          value.length < 1 ? \"Translation cannot be empty!\" : \"\";\n        break;\n      case \"explanation\":\n        errors.explanation =\n          value.length < 10\n            ? \"Explanation must be at least 10 characters!\"\n            : \"\";\n        break;\n      default:\n        break;\n    }\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const proverbAddAction = isAuthenticated ? addUserProverb : addProverb;\n    if (validateForm(errors)) {\n      Object.values(errors).forEach(\n        (error) =>\n          error &&\n          toast(error, {\n            className: \"toast-auth-error\",\n            position: \"top-left\",\n            autoClose: false,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          })\n      );\n      return;\n    }\n    if (actionType === \"Add\") {\n      await proverbAddAction(formData);\n      handleCloseModal();\n      return;\n    }\n    if (actionType === \"Update\") {\n      await updateProverb(formData, proverbObj._id);\n      handleCloseModal();\n      return;\n    }\n    if (actionType === \"AdminUpdate\") {\n      await updateUserProverb(formData, proverbObj._id);\n      handleCloseModal();\n      return;\n    }\n  };\n\n  return (\n    <Form>\n      <Input\n        label={i18next.t(\"proverbs:Proverb\")}\n        id=\"proverb-proverb\"\n        type=\"text\"\n        value={proverb}\n        name=\"proverb\"\n        onChange={handleInputChange}\n        placeholder=\"أضف مثلًا أو تعبيرًا باللغة العربية\"\n        autoComplete=\"off\"\n        labelClassName=\"input-form-label my-3\"\n        className=\"rounded\"\n        readOnly={actionType === \"Update\"}\n      />\n      <Input\n        label={i18next.t(\"proverbs:Translation\")}\n        id=\"proverb-translation\"\n        type=\"text\"\n        value={translation}\n        name=\"translation\"\n        onChange={handleInputChange}\n        placeholder=\"English translation\"\n        autoComplete=\"off\"\n        labelClassName=\"input-form-label my-3\"\n        className=\"rounded\"\n      />\n\n      <Input\n        label={i18next.t(\"proverbs:Explanation\")}\n        id=\"proverb-explanation\"\n        type=\"text\"\n        value={explanation}\n        name=\"explanation\"\n        onChange={handleInputChange}\n        placeholder=\"English explanation\"\n        autoComplete=\"off\"\n        labelClassName=\"input-form-label my-3\"\n        className=\"rounded\"\n        as=\"textarea\"\n      />\n\n      <Button\n        variant=\"info\"\n        text={actionType}\n        onClick={onSubmit}\n        color=\"white\"\n        type=\"submit\"\n        className=\"button-custom float-right\"\n        id=\"add-proverb-button\"\n        disabled={disabled}\n      />\n    </Form>\n  );\n};\n\nexport default Proverb;\n","import React from \"react\";\nimport Proverb from \"./Proverb\";\n\nconst AddProverb = ({ handleCloseModal, actionType }) => {\n  return (\n    <Proverb actionType={actionType} handleCloseModal={handleCloseModal} />\n  );\n};\n\nexport default AddProverb;\n","import React from \"react\";\nimport { Modal as ModalBootstrap } from \"react-bootstrap\";\n\nconst Modal = ({\n  children,\n  isOpen,\n  modalClose,\n  dialogClassName = \"\",\n  centered,\n}) => {\n  return (\n    <ModalBootstrap\n      dialogClassName={dialogClassName}\n      centered={centered}\n      show={isOpen}\n      onHide={modalClose}\n    >\n      <ModalBootstrap.Header className=\"border-bottom-0\" closeButton />\n      {children}\n    </ModalBootstrap>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport { ProgressBar as ProgressBarBootstrap } from \"react-bootstrap\";\nimport \"./ProgressBar.css\";\n\nconst ProgressBar = ({ loading, label, srOnly = true }) => {\n  const [completed, setCompleted] = useState(0);\n\n  useEffect(() => {\n    loading === true && setCompleted(0);\n    loading === false && setCompleted(100);\n  }, [loading]);\n\n  return (\n    <ProgressBarBootstrap\n      className=\"custom-progress-bar\"\n      now={completed}\n      label={label}\n      srOnly={srOnly}\n    />\n  );\n};\n\nexport default ProgressBar;\n","import React from \"react\";\nimport { Badge as BadgeBoostrap } from \"react-bootstrap\";\n\nconst Badge = ({ variant, text, label, labelClassName = \"\", ...props }) => {\n \n  return (\n    <div className=\"d-flex align-items-center justify-content-center\">\n      <div className={`d-flex align-items-center ${labelClassName}`}>\n        {label}\n        <BadgeBoostrap variant={variant} {...props}>\n          {text}\n        </BadgeBoostrap>\n      </div>\n    </div>\n  );\n};\n\nexport default Badge;\n","import React, { useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Input from \"../../components/Input\";\nimport Icon from \"../../components/Icon\";\nimport Badge from \"../../components/Badge\";\nimport Checkbox from \"../../components/Checkbox\";\n\nimport { useSearch, useProverb, usePagination } from \"../../redux/hooks\";\nimport \"./Search.css\";\n\nconst Search = () => {\n  const {\n    setSearchTerm,\n    searchTerm,\n    isActive,\n    field,\n    setSearchIconClicked,\n    isButtonClicked,\n    setSearchField,\n  } = useSearch();\n  const { setPageReset } = usePagination();\n  const { totalFound } = useProverb();\n  const searchInput = useRef(null);\n  const { t } = useTranslation(\"homePage\");\n\n  const handleSearchInputChange = (e) => {\n    setSearchTerm(e.target.value);\n    setPageReset(true);\n  };\n  const handleSearchFieldChange = (e) => {\n    setSearchField(e.target.name);\n    setSearchTerm(\"\");\n    setPageReset(true);\n  };\n\n  const handleIconClick = (e) => {\n    e.preventDefault();\n    searchInput.current.focus();\n    setSearchIconClicked(!isButtonClicked);\n    isButtonClicked && setSearchTerm(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"d-flex flex-column\">\n        {isButtonClicked ? (\n          <div className=\"d-flex search-fields\">\n            <Checkbox\n              id=\"search-field-proverb\"\n              label={t(\"Proverb\")}\n              checked={field === \"proverb\"}\n              name=\"proverb\"\n              onChange={handleSearchFieldChange}\n              className=\"input-form-label\"\n            />\n            <Checkbox\n              id=\"search-field-translation\"\n              label={t(\"Translation\")}\n              checked={field === \"translation\"}\n              name=\"translation\"\n              onChange={handleSearchFieldChange}\n              className=\"input-form-label ml-2\"\n            />\n            <Checkbox\n              id=\"search-field-explanation\"\n              label={t(\"Explanation\")}\n              checked={field === \"explanation\"}\n              name=\"explanation\"\n              onChange={handleSearchFieldChange}\n              className=\"input-form-label ml-2\"\n            />\n          </div>\n        ) : (\n          <> </>\n        )}\n        <div className=\"d-flex flex-row\">\n          <div className=\"search-icon-container mr-3\">\n            <Icon\n              title=\"Search\"\n              icon={isButtonClicked ? \"faTimes\" : \"faSearch\"}\n              onClick={handleIconClick}\n              id=\"home-search-icon\"\n              size=\"1x\"\n              fixedWidth\n              color=\"rgb(51, 51, 51)\"\n            />\n          </div>\n          <div\n            className={\n              isButtonClicked\n                ? \"search-form-container active\"\n                : \"search-form-container\"\n            }\n          >\n            <Input\n              type=\"text\"\n              placeholder={t(\"Search in \") + `${field}`}\n              className=\"search-bar\"\n              pClassName=\"search-bar-container\"\n              onChange={handleSearchInputChange}\n              value={isActive ? searchTerm : \"\"}\n              id=\"homepage-search-proverb\"\n              inputRef={searchInput}\n            />\n          </div>\n        </div>\n      </div>\n      {isActive ? (\n        <Badge\n          variant=\"secondary\"\n          label=\"Found:\"\n          className=\"mx-2\"\n          labelClassName=\"search-result-label\"\n          text={totalFound}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport ProverbList from \"./../proverb/ProverbList\";\nimport AddProverb from \"./../proverb/AddProverb\";\nimport Section from \"./../../components/Section\";\nimport Breadcrumb from \"./../../components/Breadcrumb\";\nimport Modal from \"./../../components/Modal\";\nimport Button from \"./../../components/Button\";\nimport ProgressBar from \"./../../components/ProgressBar\";\nimport Search from \"./Search\";\nimport { useTranslation } from \"react-i18next\";\nimport { useProverb } from \"../../redux/hooks\";\nimport \"./HomePage.css\";\n\nconst HomePage = () => {\n  const { loading: proverbLoading } = useProverb();\n  //Modal States\n  const [modal, setModal] = useState({\n    isOpen: false,\n    type: \"\",\n  });\n\n  //Modal Handlers\n\n  const handleShowModal = (type) => async (e) => {\n    e.preventDefault();\n    if (type === \"add\") {\n      setModal({\n        isOpen: true,\n        type: \"Add\",\n      });\n    }\n  };\n  const handleCloseModal = () => {\n    setModal({ isOpen: false, type: undefined });\n  };\n  const { t } = useTranslation(\"homePage\");\n\n  return (\n    <div>\n      <Modal\n        isOpen={modal.isOpen}\n        modalClose={handleCloseModal}\n        centered={true}\n        dialogClassName=\"add-proverb-modal\"\n      >\n        {modal.type === \"Add\" && (\n          <AddProverb actionType=\"Add\" handleCloseModal={handleCloseModal} />\n        )}\n      </Modal>\n\n      <Section id=\"page-title\" title={t(\"home_title\")}>\n        <Breadcrumb />\n      </Section>\n\n      <ProgressBar loading={proverbLoading} />\n\n      <div className=\"homepage-actions-section container mt-3 d-flex flex-column flex-sm-row flex-lg-row align-items-md-center\">\n        <Search />\n        <Button\n          variant=\"info\"\n          text={t(\"add_proverb\")}\n          onClick={handleShowModal(\"add\")}\n          color=\"white\"\n          type=\"submit\"\n          className=\"button-custom ml-auto\"\n          id=\"homepage-add-proverb-button\"\n        />\n      </div>\n      <ProverbList />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport Proverb from \"./Proverb\";\n\nconst UpdateProverb = ({ handleCloseModal, actionType }) => {\n  return (\n    <Proverb actionType={actionType} handleCloseModal={handleCloseModal} />\n  );\n};\n\nexport default UpdateProverb;\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Section from './../../components/Section'\nimport Breadcrumb from './../../components/Breadcrumb'\nimport FlexTable from './../../components/FlexTable'\nimport Pagination from './../../components/Pagination'\nimport Spinner from './../../components/Spinner'\nimport Modal from './../../components/Modal'\nimport Button from './../../components/Button'\nimport UpdateProverb from './../proverb/UpdateProverb'\nimport AddProverb from './../proverb/AddProverb'\nimport { userDashboardTitle } from './../../helpers/flexTableData'\nimport { useTranslation } from 'react-i18next'\nimport {\n  useAuth,\n  useProverb,\n  usePagination,\n  useLocation\n} from './../../redux/hooks'\nimport './Dashboard.css'\n\nconst Dashboard = () => {\n  const { t } = useTranslation('user')\n  const [showSocialMediaBtns, setShowSocialMediaBtns] = useState(null)\n\n  const { user, loading: userLoading } = useAuth()\n  const {\n    loading: proverbLoading,\n    getUserProverbs,\n    userProverbs,\n    deleteProverb,\n    getProverb,\n    proverb,\n    totalPages\n  } = useProverb()\n  const {\n    activePage,\n    pageSize,\n    pageItems,\n    setPage,\n    pageReset,\n    setPageReset,\n    setPageItems\n  } = usePagination()\n  const history = useHistory()\n  const { setLocationChanged } = useLocation()\n\n  useEffect(\n    function listenLocationChanges () {\n      return history.listen(() => {\n        setLocationChanged()\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [setLocationChanged]\n  )\n\n  //Modal States\n  const [modal, setModal] = useState({\n    isOpen: false,\n    type: undefined\n  })\n  //Modal Handlers\n  const handleShowModal = type => {\n    if (type === 'update') {\n      setModal({\n        isOpen: true,\n        type: 'update'\n      })\n    }\n    if (type === 'delete') {\n      setModal({\n        isOpen: true,\n        type: 'delete'\n      })\n    }\n    if (type === 'add') {\n      setModal({\n        isOpen: true,\n        type: 'add'\n      })\n    }\n  }\n  const handleCloseModal = () => {\n    setModal({ isOpen: false, type: undefined })\n  }\n\n  useEffect(\n    function fetchUserProverbs () {\n      getUserProverbs(activePage, pageSize)\n    },\n    [getUserProverbs, activePage, pageSize]\n  )\n\n  // Icon Click Handlers\n  const handleIconClick = e => {\n    const id = e.target?.id\n    const icon = e.target?.textContent\n    getProverb(id)\n\n    switch (icon) {\n      case 'Edit':\n        handleShowModal('update')\n        break\n      case 'TrashAlt':\n        handleShowModal('delete')\n        break\n      case 'Share':\n        showSocialMediaBtns\n          ? setShowSocialMediaBtns(null)\n          : setShowSocialMediaBtns(id)\n        break\n      default:\n        break\n    }\n  }\n  //Delete button handler\n  const handleDeleteProverb = id => async e => {\n    e.preventDefault()\n    await deleteProverb(id)\n    handleCloseModal()\n  }\n\n  const selectModalChildren = () => {\n    if (modal.type === 'update') {\n      if (proverb.adminApproval) {\n        return (\n          <div>\n            <p className='lead ml-2'>\n              {t('It is not allowed to update an approved proverb.')}\n            </p>\n            <Button\n              variant='info'\n              text='Close'\n              onClick={handleCloseModal}\n              color='white'\n              type='submit'\n              className='button-custom p-2 float-right mb-2 mr-2'\n              id='user-dashboard-modal-confirm-button'\n            />\n          </div>\n        )\n      }\n\n      return (\n        <UpdateProverb\n          handleCloseModal={handleCloseModal}\n          actionType='Update'\n        />\n      )\n    }\n\n    if (modal.type === 'delete') {\n      return (\n        <div>\n          <p className='lead ml-2'>\n            {t('Do you want to delete your proverb?')}\n          </p>\n          <Button\n            variant='info'\n            text={t('Delete')}\n            onClick={handleDeleteProverb(proverb._id)}\n            color='white'\n            type='submit'\n            className='button-custom p-2 float-right mb-2 mr-2'\n            id='user-dashboard-modal-delete-button'\n          />\n        </div>\n      )\n    }\n    if (modal.type === 'add') {\n      return <AddProverb handleCloseModal={handleCloseModal} actionType='Add' />\n    }\n    return null\n  }\n\n  if (proverbLoading && pageItems.length === 0) {\n    return (\n      <div className='position-absolute' style={{ top: '50%', left: '50%' }}>\n        <Spinner animation='grow' />\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        isOpen={modal.isOpen}\n        modalClose={handleCloseModal}\n        centered={true}\n        dialogClassName={`${modal.type}-proverb-modal`}\n      >\n        {selectModalChildren()}\n      </Modal>\n      <Section\n        id='page-title'\n        title={!userLoading && `${user?.name} DASHBOARD`}\n      >\n        <Breadcrumb activePage='Dashboard' />\n      </Section>\n      <Container>\n        <div className='d-flex justify-content-between flex-column-reverse flex-sm-row'>\n          <Pagination\n            id='proverb-list-top-table-pagination'\n            items={userProverbs}\n            setActivePage={setPage}\n            setActivePageItems={setPageItems}\n            pageSize={pageSize}\n            activePage={activePage}\n            paginationClass='proverb-list-table-pagination d-flex justify-content-center align-items-center'\n            shouldResetPagination={pageReset}\n            setShouldResetPagination={setPageReset}\n            totalPages={totalPages}\n          />\n          <Button\n            variant='info'\n            text={t('Add Proverb')}\n            onClick={() => handleShowModal('add')}\n            color='white'\n            type='submit'\n            className='button-custom float-right m-5'\n            id='user-dashboard-add-proverb-button'\n          />\n        </div>\n        {pageItems.length ? (\n          <FlexTable\n            data={pageItems}\n            titleData={userDashboardTitle}\n            tableId={'proverb-list-flex-table'}\n            iconClick={handleIconClick}\n            rowFooter={showSocialMediaBtns}\n            tableType='user-dashboard-flexTable'\n          />\n        ) : (\n          <h3 className='p-3 mt-2'>{t('You have not added a proverb yet.')}</h3>\n        )}\n      </Container>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React, { useRef, useEffect } from \"react\";\nimport \"./ToggleSwitch.css\";\n\nconst ToggleSwitch = ({\n  value,\n  label,\n  setToggle,\n  defaultOption,\n  firstOption,\n  secondOption,\n}) => {\n  const switchRef = useRef(null);\n\n  const addClass = (name) => (switchRef.current.className = name);\n\n  useEffect(function setToggleDefaultValue() {\n    return () => {\n      addClass(\"dot move-left\");\n      setToggle({ label: defaultOption, value: 0 });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleLeftClick = (e) => {\n    switch (value) {\n      case 1:\n        addClass(\"dot move-left\");\n        setToggle({ label: defaultOption, value: 0 });\n        break;\n      case 2:\n        addClass(\"dot move-center\");\n        setToggle({ label: firstOption, value: 1 });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleMiddleClick = (e) => {\n    addClass(\"dot move-center\");\n    setToggle({ label: firstOption, value: 1 });\n  };\n\n  const handleRightClick = (e) => {\n    switch (value) {\n      case 0:\n        addClass(\"dot move-center\");\n        setToggle({ label: firstOption, value: 1 });\n        break;\n      case 1:\n        addClass(\"dot move-right\");\n        setToggle({ label: secondOption, value: 2 });\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <div className='custom-toggle-container'>\n      {label}\n      <div className=\"custom-toggle-switch\">\n        <div className=\"segment left\" onClick={handleLeftClick}></div>\n        <div className=\"segment middle\" onClick={handleMiddleClick}></div>\n        <div className=\"segment right\" onClick={handleRightClick}></div>\n        <div className=\"dot\" ref={switchRef}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ToggleSwitch;\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport FlexTable from '../../components/FlexTable'\nimport Modal from '../../components/Modal'\nimport Button from '../../components/Button'\nimport Pagination from '../../components/Pagination'\nimport Section from '../../components/Section'\nimport Breadcrumb from '../../components/Breadcrumb'\nimport ToggleSwitch from '../../components/ToggleSwitch'\nimport Spinner from '../../components/Spinner'\nimport ProgressBar from '../../components/ProgressBar'\nimport UpdateProverb from '../proverb/UpdateProverb'\nimport AddProverb from '../proverb/AddProverb'\nimport Search from '../home/Search'\nimport { adminDashboardTitle } from '../../helpers/flexTableData'\nimport {\n  useProverb,\n  useSearch,\n  usePagination,\n  useToggle,\n  useLocation,\n  useAuth\n} from '../../redux/hooks'\nimport './AdminDashboard.css'\n\nconst AdminDashboard = () => {\n  const searchTimeOut = useRef(null)\n  const [showSocialMediaBtns, setShowSocialMediaBtns] = useState(null)\n\n  const { loading: userLoading } = useAuth()\n\n  const history = useHistory()\n  const {\n    loading: proverbLoading,\n    getAllUserProverbs,\n    allProverbs,\n    approveUserProverb,\n    deleteUserProverb,\n    getProverbAdmin,\n    proverb,\n    totalPages,\n    searchUserProverbs\n  } = useProverb()\n  const {\n    activePage,\n    pageSize,\n    pageItems,\n    setPage,\n    pageReset,\n    setPageReset,\n    setPageItems\n  } = usePagination()\n\n  const { field: searchField, searchTerm } = useSearch()\n  const { label, value: toggleValue, setToggle } = useToggle()\n  const { setLocationChanged } = useLocation()\n\n  useEffect(\n    function listenLocationChanges () {\n      return history.listen(() => {\n        setLocationChanged()\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [setLocationChanged]\n  )\n  //Modal States\n  const [modal, setModal] = useState({\n    isOpen: false,\n    type: undefined\n  })\n  //Modal Handlers\n  const handleShowModal = type => {\n    if (type === 'update') {\n      setModal({\n        isOpen: true,\n        type: 'update'\n      })\n    }\n    if (type === 'approve') {\n      setModal({\n        isOpen: true,\n        type: 'approve'\n      })\n    }\n    if (type === 'delete') {\n      setModal({\n        isOpen: true,\n        type: 'delete'\n      })\n    }\n  }\n  const handleCloseModal = () => {\n    setModal({ isOpen: false, type: undefined })\n  }\n\n  useEffect(\n    function fetchAllUserProverbs () {\n      if (!searchTerm) {\n        if (toggleValue === 0) {\n          getAllUserProverbs(activePage, pageSize)\n        }\n        if (toggleValue === 1) {\n          getAllUserProverbs(activePage, pageSize, false)\n        }\n        if (toggleValue === 2) {\n          getAllUserProverbs(activePage, pageSize, true)\n        }\n      }\n    },\n    [activePage, getAllUserProverbs, pageSize, searchTerm, toggleValue]\n  )\n\n  useEffect(\n    function searchProverbs () {\n      searchTimeOut.current = setTimeout(() => {\n        if (searchTerm) {\n          searchUserProverbs(activePage, pageSize, searchTerm, searchField)\n        }\n      }, 500)\n\n      return () => {\n        clearTimeout(searchTimeOut.current)\n      }\n    },\n    [\n      activePage,\n      pageSize,\n      searchField,\n      searchTerm,\n      searchUserProverbs,\n      toggleValue\n    ]\n  )\n\n  useEffect(\n    function shouldPaginationReset () {\n      setPageReset(true)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [toggleValue]\n  )\n\n  // Icon Click Handlers\n  const handleIconClick = e => {\n    const id = e.target?.id\n    const icon = e.target?.textContent\n    getProverbAdmin(id)\n    switch (icon) {\n      case 'Edit':\n        handleShowModal('update', id)\n        break\n      case 'TrashAlt':\n        handleShowModal('delete', id)\n        break\n      case 'Share':\n        showSocialMediaBtns\n          ? setShowSocialMediaBtns(null)\n          : setShowSocialMediaBtns(id)\n        break\n      case 'Plus':\n      case 'Minus':\n        handleShowModal('approve', id)\n        break\n      default:\n        break\n    }\n  }\n  //Delete button handler\n  const handleDeleteProverb = id => async e => {\n    e.preventDefault()\n    await deleteUserProverb(id)\n    handleCloseModal()\n  }\n\n  //Approve button handler\n  const handleApproveProverb = id => async e => {\n    e.preventDefault()\n    await approveUserProverb(!proverb.adminApproval, id)\n    handleCloseModal()\n  }\n\n  const selectModalChildren = () => {\n    if (modal.type === 'update') {\n      return (\n        <UpdateProverb\n          handleCloseModal={handleCloseModal}\n          actionType='AdminUpdate'\n        />\n      )\n    }\n    if (modal.type === 'approve') {\n      const approveText = proverb.adminApproval ? 'disapprove' : 'approve'\n      return (\n        <div>\n          <p className='lead ml-2'>{`Do you want to ${approveText} the proverb?`}</p>\n          <Button\n            variant='info'\n            text={approveText}\n            onClick={handleApproveProverb(proverb._id, !proverb.adminApproval)}\n            color='white'\n            type='submit'\n            className='button-custom p-2 float-right mb-2 mr-2'\n            id='user-dashboard-modal-delete-button'\n          />\n        </div>\n      )\n    }\n\n    if (modal.type === 'delete') {\n      return (\n        <div>\n          <p className='lead ml-2'>Do you want to delete your proverb?</p>\n          <Button\n            variant='info'\n            text='Delete'\n            onClick={handleDeleteProverb(proverb._id)}\n            color='white'\n            type='submit'\n            className='button-custom p-2 float-right mb-2 mr-2'\n            id='user-dashboard-modal-delete-button'\n          />\n        </div>\n      )\n    }\n    if (modal.type === 'add') {\n      return <AddProverb handleCloseModal={handleCloseModal} />\n    }\n    return null\n  }\n\n  if (proverbLoading && allProverbs.length === 0) {\n    return (\n      <div className='position-absolute' style={{ top: '50%', left: '50%' }}>\n        <Spinner animation='grow' />\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        isOpen={modal.isOpen}\n        modalClose={handleCloseModal}\n        centered={true}\n        dialogClassName={`${modal.type}-proverb-modal`}\n      >\n        {selectModalChildren()}\n      </Modal>\n      <Section\n        id='admin-dashboard-section'\n        title={!userLoading && `ADMIN DASHBOARD`}\n      >\n        <Breadcrumb activePage='Admin' />\n      </Section>\n      <ProgressBar loading={proverbLoading} />\n\n      <Container>\n        <div className='d-flex justify-content-between admin-actions-section flex-column'>\n          <div className='d-flex flex-lg-row justify-content-between'>\n            <Search />\n            <ToggleSwitch\n              value={toggleValue}\n              label={label}\n              setToggle={setToggle}\n              defaultOption='All'\n              firstOption='Pending'\n              secondOption='Approved'\n            />\n          </div>\n          <div>\n            <Pagination\n              id='admin-dashboard-top-pagination'\n              items={allProverbs}\n              setActivePage={setPage}\n              setActivePageItems={setPageItems}\n              pageSize={pageSize}\n              activePage={activePage}\n              paginationClass='proverb-list-table-pagination d-flex justify-content-center align-items-center'\n              shouldResetPagination={pageReset}\n              setShouldResetPagination={setPageReset}\n              totalPages={totalPages}\n            />\n          </div>\n        </div>\n        {totalPages > 0 && (\n          <FlexTable\n            data={pageItems}\n            titleData={adminDashboardTitle}\n            tableId={'proverb-list-flex-table'}\n            tableType='user-dashboard-flexTable'\n            iconClick={handleIconClick}\n            rowFooter={showSocialMediaBtns}\n          />\n        )}\n      </Container>\n    </>\n  )\n}\n\nexport default AdminDashboard\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"./../../redux/hooks\";\nimport Spinner from \"./../../components/Spinner\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { loading, isAuthenticated } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"position-absolute\" style={{ top: \"50%\", left: \"50%\" }}>\n        <Spinner animation=\"grow\" />\n      </div>\n    );\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { useTranslation } from \"react-i18next\";\nimport Section from \"../../components/Section\";\nimport Breadcrumb from \"../../components/Breadcrumb\";\nimport \"./About.css\";\nexport default function About(props) {\n  const { t } = useTranslation(\"about\");\n  return (\n    <div>\n      <Section id=\"about-section\" title={t(\"ABOUT IDIOMIA\")}>\n        <Breadcrumb activePage=\"About\" />\n      </Section>\n      <Container className=\"about-section\">\n        <h3>{t(\"What is Idiomia?\")}</h3>\n        <p>{t(\"What\")}</p>\n        <h3>{t(\"Why Idiomia?\")}</h3>\n        <p> \n          {t(\"Why\")}\n        <ul>   \n          <li>{t(\"first reason\")}</li>\n          <li>{t(\"second reason\")}</li>\n          <li>{t(\"third reason\")}</li>\n        </ul>\n        </p>\n        <h3>{t(\"How?\")}</h3>\n        <p>{t(\"How\")}</p>\n      </Container>\n    </div>\n  );\n}\n","import {\n  REGISTER_USER,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_ERROR,\n  GET_USER_INFO,\n  GET_USER_INFO_SUCCESS,\n  GET_USER_INFO_ERROR,\n  LOGIN_USER,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_ERROR,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: false,\n  loading: false,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_USER_INFO:\n    case REGISTER_USER:\n    case LOGIN_USER:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_USER_INFO_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case REGISTER_USER_SUCCESS:\n    case LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_USER_ERROR:\n    case GET_USER_INFO_ERROR:\n    case LOGIN_USER_ERROR:\n    case LOGOUT:\n      return {\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_APPROVED_PROVERBS,\n  GET_APPROVED_PROVERBS_SUCCESS,\n  GET_APPROVED_PROVERBS_ERROR,\n  GET_USER_PROVERBS,\n  GET_USER_PROVERBS_SUCCESS,\n  GET_USER_PROVERBS_ERROR,\n  GET_PROVERB_SUCCESS,\n  GET_PROVERB_ADMIN_SUCCESS,\n  ADD_PROVERB,\n  ADD_PROVERB_SUCCESS,\n  ADD_PROVERB_ERROR,\n  ADD_USER_PROVERB,\n  ADD_USER_PROVERB_SUCCESS,\n  ADD_USER_PROVERB_ERROR,\n  DELETE_PROVERB,\n  DELETE_PROVERB_SUCCESS,\n  DELETE_PROVERB_ERROR,\n  UPDATE_PROVERB,\n  UPDATE_PROVERB_SUCCESS,\n  UPDATE_PROVERB_ERROR,\n  CLEAR_PROFILE,\n  GET_ALL_USER_PROVERBS,\n  GET_ALL_USER_PROVERBS_SUCCESS,\n  GET_ALL_USER_PROVERBS_ERROR,\n  APPROVE_USER_PROVERB,\n  APPROVE_USER_PROVERB_SUCCESS,\n  APPROVE_USER_PROVERB_ERROR,\n  DELETE_USER_PROVERB,\n  DELETE_USER_PROVERB_SUCCESS,\n  DELETE_USER_PROVERB_ERROR,\n  UPDATE_USER_PROVERB,\n  UPDATE_USER_PROVERB_SUCCESS,\n  UPDATE_USER_PROVERB_ERROR,\n  SEARCH_USER_PROVERBS,\n  SEARCH_USER_PROVERBS_SUCCESS,\n  SEARCH_USER_PROVERBS_ERROR,\n  SEARCH_APPROVED_PROVERBS,\n  SEARCH_APPROVED_PROVERBS_SUCCESS,\n  SEARCH_APPROVED_PROVERBS_ERROR,\n} from \"./../actions/types\";\n\nconst initialState = {\n  approvedProverbs: [],\n  userProverbs: [],\n  allProverbs: [],\n  proverb: {},\n  totalPages: null,\n  loading: false,\n  totalFound: null,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_APPROVED_PROVERBS:\n    case GET_USER_PROVERBS:\n    case ADD_PROVERB:\n    case ADD_USER_PROVERB:\n    case DELETE_PROVERB:\n    case UPDATE_PROVERB:\n    case GET_ALL_USER_PROVERBS:\n    case APPROVE_USER_PROVERB:\n    case DELETE_USER_PROVERB:\n    case UPDATE_USER_PROVERB:\n    case SEARCH_USER_PROVERBS:\n    case SEARCH_APPROVED_PROVERBS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ADD_PROVERB_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case ADD_USER_PROVERB_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case GET_APPROVED_PROVERBS_SUCCESS:\n    case SEARCH_APPROVED_PROVERBS_SUCCESS:\n      return {\n        ...state,\n        approvedProverbs: payload.results,\n        totalPages: payload.total_pages,\n        totalFound: payload.total,\n        loading: false,\n      };\n    case GET_USER_PROVERBS_SUCCESS:\n      return {\n        ...state,\n        userProverbs: payload.results,\n        totalPages: payload.total_pages,\n        loading: false,\n      };\n    case GET_PROVERB_SUCCESS:\n      return {\n        ...state,\n        proverb: state.userProverbs.find((proverb) => proverb._id === payload),\n        loading: false,\n      };\n    case GET_PROVERB_ADMIN_SUCCESS:\n      return {\n        ...state,\n        proverb: state.allProverbs.find((proverb) => proverb._id === payload),\n        loading: false,\n      };\n    case GET_APPROVED_PROVERBS_ERROR:\n    case GET_USER_PROVERBS_ERROR:\n    case GET_ALL_USER_PROVERBS_ERROR:\n    case ADD_PROVERB_ERROR:\n    case ADD_USER_PROVERB_ERROR:\n    case DELETE_PROVERB_ERROR:\n    case UPDATE_PROVERB_ERROR:\n    case APPROVE_USER_PROVERB_ERROR:\n    case DELETE_USER_PROVERB_ERROR:\n    case UPDATE_USER_PROVERB_ERROR:\n    case SEARCH_APPROVED_PROVERBS_ERROR:\n    case SEARCH_USER_PROVERBS_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case DELETE_PROVERB_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case UPDATE_PROVERB_SUCCESS:\n      return {\n        ...state,\n        userProverbs: state.userProverbs.map((proverb) =>\n          proverb._id === payload._id ? { ...payload } : proverb\n        ),\n        loading: false,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        userProverbs: [],\n      };\n    case GET_ALL_USER_PROVERBS_SUCCESS:\n    case SEARCH_USER_PROVERBS_SUCCESS:\n      return {\n        ...state,\n        allProverbs: payload.results,\n        totalPages: payload.total_pages,\n        totalFound: payload.total,\n        loading: false,\n      };\n    case APPROVE_USER_PROVERB_SUCCESS:\n    case UPDATE_USER_PROVERB_SUCCESS:\n      return {\n        ...state,\n        allProverbs: state.allProverbs.map((proverb) =>\n          proverb._id === payload._id ? payload : proverb\n        ),\n        loading: false,\n      };\n    case DELETE_USER_PROVERB_SUCCESS:\n      return {\n        ...state,\n        allProverbs: state.allProverbs.filter(\n          (proverb) => proverb._id !== payload\n        ),\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_SEARCH_TERM,\n  SET_SEARCH_FIELD,\n  LOCATION_CHANGED,\n  CLEAR_PROFILE,\n  SET_SEARCH_ICON_CLICKED,\n} from \"./../actions/types\";\n\nconst initialState = {\n  isActive: null,\n  searchTerm: \"\",\n  field: \"proverb\",\n  isButtonClicked: false,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_SEARCH_TERM:\n      return {\n        ...state,\n        isActive: payload ? true : null,\n        searchTerm: payload,\n      };\n    case SET_SEARCH_FIELD:\n      return {\n        ...state,\n        field: payload,\n      };\n    case SET_SEARCH_ICON_CLICKED:\n      return {\n        ...state,\n        isButtonClicked: payload,\n      };\n    case LOCATION_CHANGED:\n    case CLEAR_PROFILE:\n      return initialState;\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_PAGINATION_PAGE,\n  SET_PAGINATION_SIZE,\n  SET_PAGINATION_RESET,\n  SET_PAGINATION_ITEMS,\n  CLEAR_PROFILE,\n  LOCATION_CHANGED,\n} from \"./../actions/types\";\n\nconst initialState = {\n  activePage: 1,\n  pageSize: 5,\n  pageItems: [],\n  pageReset: false,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_PAGINATION_PAGE:\n      return {\n        ...state,\n        activePage: payload,\n      };\n    case SET_PAGINATION_ITEMS:\n      return {\n        ...state,\n        pageItems: payload,\n      };\n\n    case SET_PAGINATION_SIZE:\n      return {\n        ...state,\n        pageSize: payload,\n      };\n    case SET_PAGINATION_RESET:\n      return {\n        ...state,\n        pageReset: payload,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        activePage: 1,\n        pageSize: 5,\n      };\n    case LOCATION_CHANGED:\n      return {\n        ...state,\n        activePage: 1,\n        pageSize: 5,\n        pageReset: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_TOGGLE } from \"./../actions/types\";\n\nconst initialState = {\n  value: 0,\n  label: \"All\",\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_TOGGLE:\n      return { label: payload.label, value: payload.value };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport proverb from \"./proverb\";\nimport search from \"./search\";\nimport pagination from \"./pagination\";\nimport toggle from \"./toggle\";\n\nexport default combineReducers({\n  auth,\n  proverb,\n  search,\n  pagination,\n  toggle,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport Login from './pages/auth/Login'\nimport Register from './pages/auth/Register'\nimport Navbar from './pages/layout/Navbar'\nimport HomePage from './pages/home/HomePage'\nimport Dashboard from './pages/user/Dashboard'\nimport AdminDashboard from './pages/admin/AdminDashboard'\nimport PrivateRoute from './pages/routing/PrivateRoute'\nimport About from './pages/about/About'\n\nimport './App.css'\n\n//Redux\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { loadUser } from './redux/actions/auth'\n\nfunction App () {\n  useEffect(() => {\n    store.dispatch(loadUser())\n  }, [])\n  return (\n    <Provider store={store}>\n      <Router>\n        <ToastContainer\n          className='custom-toast-container'\n          toastClassName='custom-toast-wrapper'\n          bodyClassName='custom-toast-body'\n          progressClassName='custom-toast-progress'\n          position='top-left'\n          autoClose={1600}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n        />\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/register' component={Register} />\n          <PrivateRoute exact path='/dashboard' component={Dashboard} />\n          <PrivateRoute\n            exact\n            path='/admin-dashboard'\n            component={AdminDashboard}\n          />\n          <Route exact path='/about' component={About} />\n        </Switch>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './i18n'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/idiomia-11.3987a574.png\";"],"sourceRoot":""}